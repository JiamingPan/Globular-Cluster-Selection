# -*- coding: utf-8 -*-
"""Selection of GCs in M81 Group.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U_tELhKUolMob3Rd19FNG6PhuL7rGdxz
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
# %matplotlib inline

from scipy.interpolate import UnivariateSpline
from matplotlib.patches import *
from matplotlib.path import *
from scipy.io import readsav
import pandas as pd

from astropy.io import ascii,fits
from astropy.coordinates import Angle
import astropy.units as u
from astropy.wcs import WCS
from astropy.coordinates import SkyCoord
from astropy.coordinates import match_coordinates_sky
from scipy.interpolate import interp1d

from google.colab import drive
drive.mount('/gdrive')

class SFD:
    def __init__(self, path="./"):
        
        
        f_sfd_n = fits.open('/gdrive/My Drive/Astro Research/' + "SFD_dust_4096_ngp.fits")
        self.sfd_north =  f_sfd_n[0].data
        
        f_sfd_s = fits.open('/gdrive/My Drive/Astro Research/' + "SFD_dust_4096_sgp.fits")
        self.sfd_south =  f_sfd_s[0].data
        
        self.wcs_north = WCS(f_sfd_n[0].header)
        self.wcs_south = WCS(f_sfd_s[0].header)

!git clone https://github.com/sciserver/Notebooks.git

# Commented out IPython magic to ensure Python compatibility.
# %cd Notebooks/required-files/
import img_scale

dm64 = 4500.0   # Distance to M64
dm83 = 4800.0   # Distance to M83
dm81 = 3600.0   # Distance to M81
dm94 = 4500.0   # Distance to M94

# dmod should be the distance to your favorite galaxy; either dm81, dm83, dm94, dm64
dmod = 5.*np.log10(dm64*1000.)-5.
dmodm81 = 5.*np.log10(dm81*1000.)-5.
pxs = 0.16667

m64_ra, m64_dec = Angle('12 56 43.6 hours').deg, \
        Angle('+21 40 59 degrees').deg
m81_ra, m81_dec = Angle('09 55 33.17306 hours').deg, \
                  Angle('+69 03 55.0610 degrees').deg
m82_ra, m82_dec = Angle('09 55 52.430 hours').deg, \
                  Angle('+69 40 46.93 degrees').deg
ngc3077_ra, ngc3077_dec = Angle('10 03 19.0965510921 hours').deg, \
                          Angle('+68 44 01.556166166 degrees').deg
m83_ra, m83_dec = Angle('13 37 00.9 hours').deg, \
        Angle('-29 51 56 degrees').deg
m94_ra, m94_dec = Angle('12 50 53.0 hours').deg, \
        Angle('+41 07 14 degrees').deg

"""### Containing many different observations"""

#m81-20210805
#googlepath = '/gdrive/My Drive/Astro Research/'
#datafile = 'Subaru/m81-20210805.fits' # Adjust this - it needs to be m81, m83, m64 or m94
#f = fits.open(googlepath+datafile)
#d = f[1].data
#f.close()

#stlrlc = readsav(googlepath+'gri_stellarlocus.sav')
#locus_spline = UnivariateSpline(stlrlc['rimn'], stlrlc['grmn'], s=0.085)
#print(d.columns)

"""### two fields of best seeing"""

#m81-20210811.fits
googlepath = '/gdrive/My Drive/Astro Research/'
datafile = 'Subaru/m81-20210811.fits' # Adjust this - it needs to be m81, m83, m64 or m94
f = fits.open(googlepath+datafile)
d = f[1].data
f.close()

stlrlc = readsav(googlepath+'gri_stellarlocus.sav')
locus_spline = UnivariateSpline(stlrlc['rimn'], stlrlc['grmn'], s=0.085)
print(d.columns)

print(d['patch'])

# Amusingly, the coordinates are in radians :)
scoords = SkyCoord(ra=d['ra']*180./np.pi, dec=d['dec']*180./np.pi,
                         unit=(u.deg, u.deg), frame='icrs')

# SFD correction of magnitudes
sfd  = SFD(path=googlepath+"SFD/")
sgal_coords = scoords.galactic
x,y = sfd.wcs_north.wcs_world2pix(sgal_coords.l.deg, sgal_coords.b.deg, 0)
ok_coords, = np.where(x > 0)
EBV = np.zeros(len(scoords))
EBV[ok_coords] = sfd.sfd_north[x[ok_coords].astype(int),
                               y[ok_coords].astype(int)]
A_g = 3.303*EBV
A_r = 2.285*EBV
A_i = 1.698*EBV

g0 = np.hstack([d['gCModelMag']])-A_g
r0 = np.hstack([d['rCModelMag']])-A_r
i0 = np.hstack([d['iCModelMag']])-A_i

# Errors are really bad, so make rescaled errors - 
# first step is to find the lower (in flux) quartile, that is used as 5 sigma for the rescaling of errors.
gmed = np.nanmedian(g0)
whlo, = np.where(g0>gmed)
glo = np.nanmedian(g0[whlo])
rmed = np.nanmedian(r0)
whlo, = np.where(r0>rmed)
rlo = np.nanmedian(r0[whlo])
imed = np.nanmedian(i0)
whlo, = np.where(i0>imed)
ilo = np.nanmedian(i0[whlo])

# Make rescaled errors
dg0 = -2.5*np.log10(10.0**(-0.4*g0) - 0.2*10.0**(-0.4*glo))-g0
toolow,=np.where(dg0<0.02)
dg0[toolow]=np.zeros(len(toolow))+0.02
dr0 = -2.5*np.log10(10.0**(-0.4*r0) - 0.2*10.0**(-0.4*rlo))-r0
toolow,=np.where(dr0<0.02)
dr0[toolow]=np.zeros(len(toolow))+0.02
di0 = -2.5*np.log10(10.0**(-0.4*i0) - 0.2*10.0**(-0.4*ilo))-i0
toolow,=np.where(di0<0.02)
di0[toolow]=np.zeros(len(toolow))+0.02

gi0 = g0 - i0
dgi0 = np.sqrt(dg0**2 + di0**2)
ri0 = r0 - i0
dri0 = np.sqrt(dr0**2 + di0**2)
gr0 = g0 - r0
dgr0 = np.sqrt(dg0**2 + dr0**2)

shpxx = np.hstack(d['shape_xx'])*pxs
shpyy = np.hstack(d['shape_yy'])*pxs
shp = 0.5*np.hstack([d['shape_xx']+d['shape_yy']])*pxs # average of xx, yy.

ra = np.hstack([d['ra']])*180./np.pi
dec = np.hstack([d['dec']])*180./np.pi

gnew = g0
rnew = r0
inew = i0

g0b = np.hstack([d['gBgSubPsfMag']])-A_g
r0b = np.hstack([d['rBgSubPsfMag']])-A_r
i0b = np.hstack([d['iBgSubPsfMag']])-A_i

plt.plot(d['ra'],d['dec'],'ko',mec='none',markersize=1)

gCFlag = np.hstack([d['gCModelFlag']])
rCFlag = np.hstack([d['rCModelFlag']])
iCFlag = np.hstack([d['iCModelFlag']])
print(gCFlag[np.where((ra<148.3594034)&(ra>148.3591034)&((dec<69.5216138)&(ra>69.5213138))&(g0<19))])
print(g0[np.where((ra<148.3594034)&(ra>148.3591034)&((dec<69.5216138)&(ra>69.5213138))&(g0<19))])

# m81 coord
print(min(ra),max(ra))
print(min(dec),max(dec))

"""#**IRAC** identified L18 GCs using our method

Add two Nantais GCs \
'+09:54:46.4426 +69:10:53.9387'  ID 246\
'+09:55:04.3607 +69:05:15.8109' ID 628

"""

# find nearest match
#irac = ascii.read('/gdrive/My Drive/Astro Research/M81_IRAC.csv') #irac_M81_all.csv
#Add irac data of IKN
irac = ascii.read('/gdrive/My Drive/Astro Research/IRAC/M81_all_irac(2).csv')
#iraccd = SkyCoord(ra=irac['ra'][:],
##                      dec=irac['dec'][:],
 #                     unit=(u.deg, u.deg), frame='icrs')

iraccd = SkyCoord(ra=irac['ra'][irac['i1_df_ap1']  != 'null'],
                      dec=irac['dec'][irac['i1_df_ap1']  != 'null'], #(irac['i1_f_ap1']  != 'null')&(irac['i2_f_ap1']  != 'null')
                      unit=(u.deg, u.deg), frame='icrs')
##irra = irac['ra'][:]
#irdec = irac['dec'][:]

irra = irac['ra'][irac['i1_df_ap1']  != 'null']
irdec = irac['dec'][irac['i1_df_ap1']  != 'null']
# Match with Subaru Data?
irmtchi, irmtchdist, _ = match_coordinates_sky(iraccd,scoords)
#3.6um
iracap1 = irac['i1_f_ap1'][irac['i1_df_ap1']  != 'null']
iracap1 = np.asarray(iracap1, dtype='float64')
#iracap1 = float(irac['i1_f_ap1'])
iracmag = -2.5*np.log10(iracap1*1e-6/3631.) 

iracap1type =  irac['i1_fluxtype'][irac['i1_df_ap1']  != 'null']
iracap1flag =  irac['i1_fluxflag'][irac['i1_df_ap1']  != 'null']
iracap2flag =  irac['i2_fluxflag'][irac['i1_df_ap1']  != 'null']

diracap1 = irac['i1_df_ap1'][irac['i1_df_ap1']  != 'null'] #irac['i1_df_ap1']  != 'null'
diracap1 = np.asarray(diracap1, dtype='float64')
#print(iracap1,diracap1)
#iracap1 = float(irac['i1_f_ap1'])
diracmag = -2.5*np.log10((iracap1+diracap1)*1e-6/3631.) +2.5*np.log10((iracap1-diracap1)*1e-6/3631.) 

# 2nd chaneel
#iracap2 = irac['i2_f_ap1'][(irac['i1_f_ap1']  != 'null')&(irac['i2_f_ap1']  != 'null')]
#iracap2 = np.asarray(iracap2, dtype='float64')
#iracap1 = float(irac['i1_f_ap1'])
#iracmag2 = -2.5*np.log10(iracap2*1e-6/3631.) 

#diracap2 = irac['i2_df_ap1'][(irac['i1_f_ap1']  != 'null')&(irac['i2_f_ap1']  != 'null')]
#diracap2 = np.asarray(diracap2, dtype='float64')
#print(iracap1,diracap1)
#iracap1 = float(irac['i1_f_ap1'])
#diracmag2 = -2.5*np.log10((iracap2+diracap2)*1e-6/3631.) +2.5*np.log10((iracap2-diracap2)*1e-6/3631.) 
print(iracmag,diracmag)
#iracmag = -2.5*np.log10(irac['i1_f_ap1']*1e-6/3631.) # AB mag
cls = irmtchdist.arcsec<0.75


#'+09:54:46.4426 +69:10:53.9387'  ID 246 
#09:55:04.3607 +69:05:15.8109' ID 628
#Adding Nantias not covered on L18
#knowngcN = SkyCoord(["9h54m46.4426s +69d10m53.9387s","09h55m04.3607s +69d05m15.8109s"], frame="icrs") 
#[(148.520279, 69.155098), (148.733749, 69.041939),
 #    (149.477997, 68.816895), (149.159943, 69.380661),
 #    (148.262985, 69.230042)]>

#Within 2'' between HSC and Nantias but not in L18 catalog N = 8
#Add two IKN GCs identified in IRAC [152.01992879 152.02291973] [68.41475156 68.41593825]
knowngcN = SkyCoord([ (148.69351075, 69.18164963),
      (148.76816938, 69.08772526),(148.77549558, 68.94017431), (148.54564234, 69.03523948),
     (148.98631365, 68.8703517 ), (148.4275201 , 69.22336273),(148.7157483 , 69.32930157),
     (148.86303575, 68.74799976),(152.01992879,68.41475156),(152.02291973,68.41593825)] ,frame='icrs', unit='deg') 


knowngc2, hgcirdist2, _ = match_coordinates_sky(knowngcN,iraccd)
clss2 = hgcirdist2.arcsec< 0.5
print(knowngcN[clss2],'IRAC of Nantais',print(iracmag[knowngc2[clss2]]))


m81gc = ascii.read('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/M81_GCs Nawon - Sheet1.csv')
m81gccd = SkyCoord(ra=m81gc['ra'][:],
                      dec=m81gc['dec'][:],
                      unit=(u.deg, u.deg), frame='icrs')
m82gc = ascii.read('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/M82_GC Nawon - Sheet1.csv')
m82gccd = SkyCoord(ra=m82gc['ra'][:],
                      dec=m82gc['dec'][:],
                      unit=(u.deg, u.deg), frame='icrs')
ngcgc = ascii.read('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/NGC 3077_GC Nawton - Sheet1.csv')
ngcgccd = SkyCoord(ra=ngcgc['ra'][:],
                      dec=ngcgc['dec'][:],
                      unit=(u.deg, u.deg), frame='icrs')
igc = ascii.read('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/M81 IGC Nawton - Sheet1.csv')
igccd = SkyCoord(ra=igc['ra'][:],
                      dec=igc['dec'][:],
                      unit=(u.deg, u.deg), frame='icrs')
# Add one from Nantais... 148.76816697, 69.08773071? Not now.

#The one file for all L18 GCs
Lgcc=  pd.read_csv('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/L18 catalog (2).csv',sep=',')
#L18gccd = SkyCoord(ra=Lgcc['ra'],
#                      dec=Lgcc['dec'],
#                      unit=(u.deg, u.deg), frame='icrs')


h81gc = SkyCoord(ra=np.hstack([Lgcc['ra'],knowngcN.ra.deg]),
                    dec=np.hstack([Lgcc['dec'],knowngcN.dec.deg]),
                    unit=(u.deg, u.deg), frame='icrs')  
# Match GCs with Subaru 
hgcsu, hgcsudist, _ = match_coordinates_sky(h81gc,scoords)
clssu = hgcsudist.arcsec<0.5
#M82
hgc2su, hgcsu2dist, _ = match_coordinates_sky(m82gccd,scoords )
cls2su = hgcsu2dist.arcsec<0.75
#M81
hgc1su, hgcsu1dist, _ = match_coordinates_sky(m81gccd,scoords )
cls1su = hgcsu1dist.arcsec<0.75
#NGC3077
ngsu, ngsu1dist, _ = match_coordinates_sky(ngcgccd,scoords )
clsngsu = ngsu1dist.arcsec<0.75
#IGC
ingsu, ingsu1dist, _ = match_coordinates_sky(igccd,scoords )
clsisu = ingsu1dist.arcsec<0.75


#All halo GCs in IRAC
hgcir, hgcirdist, _ = match_coordinates_sky(iraccd,h81gc[clssu])
clss = hgcirdist.arcsec< 0.5 #0.5'' would get rid of many Nantais GCs
#M82
#hgc2ir, hgcir2dist, _ = match_coordinates_sky(iraccd,m82gccd[cls2su] )
#cls2 = hgcir2dist.arcsec<0.5
#M81
#hgc1ir, hgcir1dist, _ = match_coordinates_sky(iraccd,m81gccd[cls1su] )
#cls1 = hgcir1dist.arcsec<0.5
#NGC3077
#ngir, ngir1dist, _ = match_coordinates_sky(iraccd,ngcgccd[clsngsu] )
#clsng = ngir1dist.arcsec<0.5
#IGC
#ingir, ingir1dist, _ = match_coordinates_sky(iraccd,igccd[clsisu] )
#clsi = ingir1dist.arcsec<0.5

#    blu = (inew[irmtchi]-iracmag<-0.1)&(inew[irmtchi]-iracmag>(-1.7+1.35*(gnew[irmtchi]-rnew[irmtchi])))
blu = (i0[irmtchi]-iracmag<-0.1)&(i0[irmtchi]-iracmag<(-0.6+1.35*(g0[irmtchi]-r0[irmtchi])))&(i0[irmtchi]-iracmag>(-1.7+1.35*(g0[irmtchi]-r0[irmtchi])))
#Do I get an empty len() here?
bigblu = np.full(len(i0), False)
bigblu[irmtchi]=blu
print(len(h81gc)) 
print('riac identified GCs=',len(iracmag[clss]-2)) 
print('r',r0[irmtchi[clss]][np.where(r0[irmtchi[clss]]>0)]) #missing many r band. only 42 identified.
print(len(r0[irmtchi[clss]][np.where(r0[irmtchi[clss]]>0)]))
print('i',i0[irmtchi[clss]][np.where(i0[irmtchi[clss]]>0)])
print(len(i0[irmtchi[clss]][np.where(i0[irmtchi[clss]]>0)]))
print('g',g0[irmtchi[clss]][np.where(g0[irmtchi[clss]]>0)])
print(len(g0[irmtchi[clss]][np.where(g0[irmtchi[clss]]>0)]))

#All identified

iracgcLee = SkyCoord(ra=irra[clss],
                    dec=irdec[clss],
                    unit=(u.deg, u.deg), frame='icrs')  
hgcsuird, hgcsudistird, _ = match_coordinates_sky(iracgcLee,scoords)
clssull = hgcsudistird.arcsec<1
print(i0[hgcsuird[clssull]][np.where(i0[hgcsuird[clssull]]>0)])
print(len(i0[hgcsuird[clssull]][np.where(i0[hgcsuird[clssull]]>0)]))

#color of New Reduction Subaru. 
gnew = g0
rnew = r0
inew = i0
#Cut for CGs
sma = 0.4 ; big = 0.6
smaa = 0.5 ; bigg = 1
posscand, = np.where( (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.3)
                 & (shp[irmtchi[cls]] < big) &(shp[irmtchi[cls]] > sma) &
                  (gr0[irmtchi[cls]] > 0.25) & (gr0[irmtchi[cls]] < 0.8) 
                 & (gi0[irmtchi[cls]] > 0) & (gi0[irmtchi[cls]] < 1.1) 
                 & (i0[irmtchi[cls]] > 18) & (i0[irmtchi[cls]] < 22 )) 

blu = ((i0[irmtchi[cls]]-iracmag[cls]<-0.2)&(i0[irmtchi[cls]]-iracmag[cls]>-0.9)
&(i0[irmtchi[cls]]-iracmag[cls]<(-0.6+1.35*(g0[irmtchi[cls]]-r0[irmtchi[cls]])))
&(i0[irmtchi[cls]]-iracmag[cls]>(-1.65+1.35*(g0[irmtchi[cls]]-r0[irmtchi[cls]])))& 
 (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.5)
                 & (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) #&
                #  (gr0[irmtchi[cls]] > 0) & (gr0[irmtchi[cls]] < 1.25) 
                 & (gi0[irmtchi[cls]] > 0) & (gi0[irmtchi[cls]] < 1.6) 
                 & (i0[irmtchi[cls]] > 17) & (i0[irmtchi[cls]] < 26 )&(shpxx[irmtchi[cls]] > 0.5))

#clsblu = ((i0[irmtchi[clss]]-iracmag[clss]<0.18)&(i0[irmtchi[clss]]-iracmag[clss]>-0.9)
#&(i0[irmtchi[clss]]-iracmag[clss]<(-0.6+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))
#&(i0[irmtchi[clss]]-iracmag[clss]>(-1.7+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))&(shpxx[irmtchi[clss]] > 0.5))
#(i0[irmtchi[clss]]-iracmag[clss]<(-0.6+1.35*(g0[irmtchi[clss]]-i0[irmtchi[clss]])

#clsblu = ((i0[irmtchi[clss]]-iracmag[clss]<0.18)&(i0[irmtchi[clss]]-iracmag[clss]>-0.9)

#&(i0[irmtchi[clss]]-iracmag[clss]<(-0.6+1.35*(g0[irmtchi[clss]]-i0[irmtchi[clss]])
#&(i0[irmtchi[clss]]-iracmag[clss]>(-1.83+1.2*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))&(shpxx[irmtchi[clss]] > 0.5))

#GC selection
#clsblu = ((i0[irmtchi[clss]]-iracmag[clss]<-0.7)&(i0[irmtchi[clss]]-iracmag[clss]>-1.5)
#&(i0[irmtchi[clss]]-iracmag[clss]<(-1.9+2*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))
#&(i0[irmtchi[clss]]-iracmag[clss]>(-1.87+1.25*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))&(shp[irmtchi[clss]] > 0.6))

#Require g, i >0
#[np.where(inew[irmtchi[clss]]>0)]
ib = np.where(inew[irmtchi[clss]]>0)
gb = np.where(gnew[irmtchi[clss]]>0)
gibze = np.where((inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0))
#Reselect using g-i, since many missing r band measurement
#clsblu = ((inew[irmtchi[clss]]-iracmag[clss]<-0.7)&(inew[irmtchi[clss]]-iracmag[clss]>-1.5)
#&(inew[irmtchi[clss]]-iracmag[clss]<(-1.23+0.55*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))
#&(inew[irmtchi[clss]]-iracmag[clss]>(-2.0867+1.18*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))
#&(inew[irmtchi[clss]]-iracmag[clss]<(-2.1375+1.75*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))&(shp[irmtchi[clss]] > 0.6)&(inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0)) #&(gibze==True))

#need to adjust for the IKN GCs
clsblu = ((inew[irmtchi[clss]]-iracmag[clss]<-0.7)&(inew[irmtchi[clss]]-iracmag[clss]>-1.5)
&(inew[irmtchi[clss]]-iracmag[clss]<(-1.23+0.55*(gnew[irmtchi[clss]]-inew[irmtchi[clss]]))) #-1.23+0.55 -2.24+2.4
&(inew[irmtchi[clss]]-iracmag[clss]>(-2.0867+1.18*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))
#&(inew[irmtchi[clss]]-iracmag[clss]<(-2.1375+1.75*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))
&(shp[irmtchi[clss]] > 0.6)&(inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0)) #&(gibze==True))
x = np.linspace(0,1.5,100)
y1 = -2.24+2.4*x
y2 = -2.0867+1.18*x
y3 = -2.1375+1.75*x

#69.6545 GC-2
GC2loc = np.where((dec[irmtchi[clss]]<69.6645)&(dec[irmtchi[clss]]>69.6445))
GC1loc = np.where((dec[irmtchi[clss]]<69.53151387)&(dec[irmtchi[clss]]>69.51151387))
#Nantias 148.76816958, 69.08772525
GCN = np.where((ra[irmtchi[clss]]<148.79816958)&(ra[irmtchi[clss]]>148.74816958))
print(gnew[irmtchi[clss]][GC2loc],inew[irmtchi[clss]][GC2loc],rnew[irmtchi[clss]][GC2loc],'GC-2 g i')
print(gnew[irmtchi[clss]][GC1loc],inew[irmtchi[clss]][GC1loc],rnew[irmtchi[clss]][GC1loc],'GC-1 g i')
#69.52151387 GC-1
#GC1loc = np.where((dec[irmtchi[clss]]<69.53151387)&(dec[irmtchi[clss]]>69.51151387))
print('GC-2',gnew[irmtchi[clss]][GC2loc],rnew[irmtchi[clss]][GC2loc], inew[irmtchi[clss]][GC2loc])
gaxblu = ((inew[irmtchi[clss]]-iracmag[clss]>(-1.2+0.55*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))&(inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0))
#gaxblu = ((inew[irmtchi[clss]]-iracmag[clss]>-0.5)&(inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0))

testclublu = ((i0[irmtchi[clss]]-iracmag[clss]<-0.7)&(i0[irmtchi[clss]]-iracmag[clss]>-1.5)
&(i0[irmtchi[clss]]-iracmag[clss]<(-1.23+0.55*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))
&(i0[irmtchi[clss]]-iracmag[clss]>(-2.0867+1.18*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))&(shp[irmtchi[clss]] < 0.6)) #(shpxx[irmtchi[clss]] < 0.5)

starblu = (((inew[irmtchi[clss]]-iracmag[clss]<(-2.0867+1.18*(gnew[irmtchi[clss]]-inew[irmtchi[clss]])))&(inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0))
               |(((shp[irmtchi[clss]] < 0.6)&(inew[irmtchi[clss]]-iracmag[clss]<-0.7))&(inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0)))

missblu = ((shpxx[irmtchi[clss]] >0.75)&(shpxx[irmtchi[clss]]< 0.89)&(i0[irmtchi[clss]]>20)&(i0[irmtchi[clss]]<21)
&(gi0[irmtchi[clss]] >0.5)&(gi0[irmtchi[clss]] <1))
#gaxblu = (((i0[irmtchi[clss]]-iracmag[clss])>0.1))
#|(i0[irmtchi[clss]]-iracmag[clss]>(-1.2+1.35*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))
plt.figure(figsize=(18*1.5,9*1.5),frameon=False)
#figure(1).clear()
#figure(1).set_size_inches(18,9)
ax2=plt.subplot(241)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shp[irmtchi[cls]], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')
#ax2.plot(inew[irmtchi[clss]][gaxblu],shpxx[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=4,label='Galaxy-like L18 GCs')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Galaxy-like L18 GCs')
ax2.plot(inew[irmtchi[clss]][starblu],shp[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5,label='Star-like objects')
ax2.plot(inew[irmtchi[clss]][clsblu],shp[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5,label='Cluster-like L18 GCs')
ax2.plot(inew[irmtchi[clss]][gaxblu],shp[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=4,label='Galaxy-like objects')
ax2.plot(inew[irmtchi[clss]][GC2loc],shp[irmtchi[clss]][GC2loc], 'bv', alpha=1,markersize=6)
ax2.plot(inew[irmtchi[clss]][GC1loc],shp[irmtchi[clss]][GC1loc], 'rv', alpha=1,markersize=6)
#ax2.plot(inew[irmtchi[clss]][testclublu], shp[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=5,label='Contaminant')
#ax2.plot(inew[irmtchi[cls]][blu], shpxx[irmtchi[cls]][blu],'g.', alpha=1,markersize=3)
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{average}$',fontsize=14)
ax2.set_xlim(16,27)
ax2.set_ylim(0,6)
ax2.legend(loc='lower right', frameon=False)

print('size',shp[irmtchi[clss]][clsblu])
#plt.legend()
#    ax2=subplot(231)
#    ax2.plot(irmtchdist.arcsec, inew[irmtchi]-iracmag, 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#    ax2.set_xlabel('separation (arcsec)')
#    ax2.set_ylabel('$i-[3.6]$')
#    ax2.set_xlim(0,5)
#    ax2.set_ylim(0,6)
#    ax2=subplot(232)
#    ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], iracmag[cls], 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#    ax2.plot(gnew[irmtchi[cls&blu&posscand[irmtchi]]]-inew[irmtchi[cls&blu&posscand[irmtchi]]], iracmag[cls&blu&posscand[irmtchi]],'g.', alpha=1,markersize=2)
#    ax2.plot(gnew[irmtchi[clsgc]]-inew[irmtchi[clsgc]], iracmag[clsgc], 'bx', alpha=1,markersize=2)
#    ax2.set_xlabel('$(g-i)$')
#    ax2.set_ylabel('$[3.6]$')
#    ax2.set_xlim(-1,3.5)
#    ax2.set_ylim(21,13)
m82rv = np.where((dec[irmtchi[clss]][clsblu]>69.4))
ax2=plt.subplot(242)
#Subaru Data black
ax2.plot(gnew-inew, inew, 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' red
#ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]], 'r.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac and Subaru GCs candidate and maybe Irac Candidates dark green
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
#Blue dots, match within 2 arcsecond with Nantais 2010 in New Subaru
ax2.plot(gnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][missblu]-inew[irmtchi[clss]][missblu], inew[irmtchi[clss]][missblu], 'g.', alpha=1,markersize=7)
ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5)
ax2.plot(gnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu][m82rv]-inew[irmtchi[clss]][clsblu][m82rv], inew[irmtchi[clss]][clsblu][m82rv], 'gx', alpha=0.3,markersize=10)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=6)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu],'g.', alpha=1,markersize=3) missblu
ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'gx', alpha=0.5,markersize=4)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}$',fontsize=14)
ax2.set_xlim(-1,3.5)
ax2.set_ylim(27,16)
print(len(gnew[irmtchi[cls]][blu]))
ax2=plt.subplot(243)
ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], rnew[irmtchi[cls]]-inew[irmtchi[cls]], 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-rnew[irmtchi[clss]][gaxblu], rnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=4)
ax2.plot(gnew[irmtchi[clss]][starblu]-rnew[irmtchi[clss]][starblu], rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5)
ax2.plot(gnew[irmtchi[clss]][clsblu]-rnew[irmtchi[clss]][clsblu], rnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-rnew[irmtchi[clss]][testclublu], rnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=6)
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-r)_{0}$',fontsize=14)
ax2.set_ylabel('$(r-i)_{0}$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-0.5,1)

ax2=plt.subplot(246)
ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-rnew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=4)
ax2.plot(gnew[irmtchi[clss]][GC2loc]-rnew[irmtchi[clss]][GC2loc], inew[irmtchi[clss]][GC2loc]-iracmag[clss][GC2loc], 'bv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[clss]][GC1loc]-rnew[irmtchi[clss]][GC1loc], inew[irmtchi[clss]][GC1loc]-iracmag[clss][GC1loc], 'rv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[clss]][starblu]-rnew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
ax2.plot(gnew[irmtchi[clss]][clsblu]-rnew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]]-rnew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'gv', alpha=0.2,markersize=6)
#ax2.plot(gnew[irmtchi[cls]][blu]-rnew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=1,markersize=2)
#ax2.plot(gnew[irmtchi[cls&starsmall[irmtchi]]]-rnew[irmtchi[cls&starsmall[irmtchi]]], inew[irmtchi[cls&starsmall[irmtchi]]]-iracmag[cls&starsmall[irmtchi]], 'r.', alpha=0.1,markersize=2,lw=0, markeredgecolor='none')
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-r)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,6)

ax2=plt.subplot(245)
ax2.plot(rnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(rnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
ax2.plot(rnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=4)
ax2.plot(rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
ax2.plot(rnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'rx', alpha=1,markersize=5)
ax2.plot(rnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'gv', alpha=0.3,markersize=4)
#ax2.plot(rnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=6)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(r-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,6)

#IKN GCs
inkgg = np.where(ra[irmtchi[clss]]>151.5)
ax2=plt.subplot(247)
ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=4)
ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
ax2.plot(gnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'rx', alpha=1,markersize=5)
ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'gv', alpha=0.2,markersize=6)
ax2.plot(gnew[irmtchi[clss]][inkgg]-inew[irmtchi[clss]][inkgg], inew[irmtchi[clss]][inkgg]-iracmag[clss][inkgg], 'rv', alpha=0.8,markersize=6)
#ax2.plot(gnew[irmtchi[clss]][missblu]-inew[irmtchi[clss]][missblu], inew[irmtchi[clss]][missblu]-iracmag[clss][missblu], 'g.', alpha=1,markersize=8)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=6)
#ax2.plot(gnew[irmtchi[clss]][GC2loc]-inew[irmtchi[clss]][GC2loc], inew[irmtchi[clss]][GC2loc]-iracmag[clss][GC2loc], 'bv', alpha=1,markersize=6)
#ax2.plot(gnew[irmtchi[clss]][GC1loc]-inew[irmtchi[clss]][GC1loc], inew[irmtchi[clss]][GC1loc]-iracmag[clss][GC1loc], 'rv', alpha=1,markersize=6)
#ax2.plot(gnew[irmtchi[clss]][GCN]-inew[irmtchi[clss]][GCN], inew[irmtchi[clss]][GCN]-iracmag[clss][GCN], 'gv', alpha=1,markersize=6)
ax2.plot(x, y1, 'g.', alpha=1,markersize=1)
ax2.plot(x, y2, 'g.', alpha=1,markersize=1)
ax2.plot(x, y3, 'g.', alpha=1,markersize=1)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)#
ax2.set_xlim(-1,5)
ax2.set_ylim(-3,6)
#ax2.set_ylim(-2,-0.5)
print('ikn i-3.6 and error', inew[irmtchi[clss]][inkgg]-iracmag[clss][inkgg],'i  g r',inew[irmtchi[clss]][inkgg],gnew[irmtchi[clss]][inkgg],rnew[irmtchi[clss]][inkgg],'error in i0',di0[irmtchi[clss]][inkgg],
      'irac mag',iracmag[clss][inkgg],'ra dec', ra[irmtchi[clss]][inkgg],dec[irmtchi[clss]][inkgg],diracmag[clss][inkgg]
      ,'type ap1 flag',iracap1type[clss][inkgg],iracap1flag[clss][inkgg],iracap2flag[clss][inkgg])
     # ,'anthoer collor',inew[irmtchi[clss]][inkgg]-iracmag2[clss][inkgg])
ax2=plt.subplot(244)
ax2.plot(ra[irmtchi[cls]], dec[irmtchi[cls]], 'k.', alpha=0.1,markersize=2,lw=0, markeredgecolor='none')
#red dots Spectroscopy confirmed GCs and Ghost Survey 
#ax2.plot(specgccd.ra.deg, specgccd.dec.deg, 'rx', markersize=2)
#blue dots Irac near Spectropcopy confirmed GCs at Subaru blue and Ghost Survey
#ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]], 'bx', alpha=0.5,markersize=3)
#Good Candidtaes in Subaru, Irac
#ax2.plot(ra[irmtchi[cls]][blu], dec[irmtchi[cls]][blu],'g.', alpha=1,markersize=6) #testclublu
ax2.plot(ra[irmtchi[clss]][gaxblu], dec[irmtchi[clss]][gaxblu],'bo', alpha=1,markersize=4)
ax2.plot(ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu],'yv', alpha=1,markersize=5)
ax2.plot(ra[irmtchi[clss]][clsblu], dec[irmtchi[clss]][clsblu],'rx', alpha=1,markersize=5)
ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]], 'gx', alpha=0.5,markersize=3)
#ax2.plot(ra[irmtchi[clss]][GCN], dec[irmtchi[clss]][GCN], 'gv', alpha=1,markersize=6)
#ax2.plot(ra[irmtchi[clss]][testclublu], dec[irmtchi[clss]][testclublu],'gv', alpha=1,markersize=6)
ax2.legend(loc='upper right', frameon=False)
ax2.set_xlabel('$RA$',fontsize=14)
ax2.set_ylabel('$Dec$',fontsize=14)
ax2.set_xlim(152.5,147) #152-0.3,146.5
#ax2.set_ylim(mdec[0]+0.3,mdec[1]-0.5)
plt.gcf().set_dpi(300)
plt.tight_layout()
plt.legend()

confg = np.where((inew[irmtchi[clss]]-iracmag[clss]<3)&(inew[irmtchi[clss]]-iracmag[clss]>-3)
&(gnew[irmtchi[clss]]-inew[irmtchi[clss]]>-1)&(gnew[irmtchi[clss]]-inew[irmtchi[clss]]<3))
print('number of identified true GCs',len(inew[irmtchi[clss]][np.where((inew[irmtchi[clss]]>0)&(gnew[irmtchi[clss]]>0)&(iracmag[clss]>0))]),'the first should be right',len(inew[irmtchi[clss]][np.where(inew[irmtchi[clss]]>0)])
,len(rnew[irmtchi[clss]][np.where(rnew[irmtchi[clss]]>0)]),'3.6',len(iracmag[clss][np.where(iracmag[clss]>0)]))
print('number of GC-like object',len(inew[irmtchi[clss]][clsblu][np.where(inew[irmtchi[clss]][clsblu]>0)])
,'3.6',len(iracmag[clss][clsblu][np.where(iracmag[clss][clsblu]>0)]))
print('number of star-like object',len(inew[irmtchi[clss]][starblu][np.where(inew[irmtchi[clss]][starblu]>0)])
,'3.6',len(iracmag[clss][starblu][np.where(iracmag[clss][starblu]>0)]))
print('number of galaxy-like object',len(inew[irmtchi[clss]][gaxblu][np.where(inew[irmtchi[clss]][gaxblu]>0)]),len(ra[irmtchi[clss]][gaxblu])
,'3.6',len(iracmag[clss][gaxblu][np.where(iracmag[clss][gaxblu]>0)])) 
print('number of conta',len(iracmag[clss][testclublu])) 
#print('star-like object coord',ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu])
#print('GC-like object coord',ra[irmtchi[clss]][clsblu], dec[irmtchi[clss]][clsblu])
#print(ra[irmtchi[clss]][testclublu], dec[irmtchi[clss]][testclublu])
#print(len(inew[irmtchi[clss]]))
#print(len(gnew[irmtchi[clss]]))
#print(len(rnew[irmtchi[clss]]))
#pos = np.where(iracmag[clss]>0)
#ginan = np.where(gnew[irmtchi[clss]]-inew[irmtchi[clss]]<0)
#print(len(iracmag[clss]),iracmag[clss][pos]>0)
#print(inew[irmtchi[clss]][missblu]-iracmag[clss][missblu])# ,(inew[irmtchi[clss]]-iracmag[clss]))
#print(np.array(g0[irmtchi[clss]][missblu]-r0[irmtchi[clss]][missblu])) #,gnew[irmtchi[clss]],inew[irmtchi[clss]],inew[irmtchi[clss]]-iracmag[clss])
#print(i0[irmtchi[clss]][missblu])

#one GC is missing r band, I need to change it to 
#print(shp[irmtchi[clss]][clsblu])
#print(rnew[irmtchi[clss]])
#print('galaxy L18',ra[irmtchi[clss]][gaxblu], dec[irmtchi[clss]][gaxblu])
#print(gnew[irmtchi[clss]],inew[irmtchi[clss]], rnew[irmtchi[clss]],iracmag[clss],'identified confirmed GCs')
#plt.savefig('IRAC confirmed GC.jpg',bbox_inches='tight',transparent=False) #, transparent=False
plt.show()
#print(inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu])

"""### misclassified objects"""

Lgcc=  pd.read_csv('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/L18 catalog (2).csv',sep=',')
L18gccd = SkyCoord(ra=Lgcc['ra'],
                      dec=Lgcc['dec'],
                      unit=(u.deg, u.deg), frame='icrs')
print(Lgcc['a_error'])
ID = Lgcc['ID']
NHID = Lgcc['NHID']

L18gccd = SkyCoord(ra=Lgcc['ra'],
                      dec=Lgcc['dec'],
                      unit=(u.deg, u.deg), frame='icrs') 
#Galaxy like objects
allgogccd = SkyCoord(ra=ra[irmtchi[clss]][gaxblu],
                    dec=dec[irmtchi[clss]][gaxblu],
                    unit=(u.deg, u.deg), frame='icrs')  
print(allgogccd,len(ra[irmtchi[clss]][gaxblu]),'number of galayx like objects')
vrrgss, vrrssdist, _ = match_coordinates_sky(allgogccd,L18gccd)
vrgcc = vrrssdist.arcsec<5
print(len(vrrgss[vrgcc]),'nubmer of sample in L18') #-1 from IKN

ID = ID[vrrgss[vrgcc]]
NHID=NHID[vrrgss[vrgcc]]
L = ra[irmtchi[clss]][gaxblu][vrgcc]
R=dec[irmtchi[clss]][gaxblu][vrgcc]
C = gnew[irmtchi[clss]][gaxblu][vrgcc]
D = rnew[irmtchi[clss]][gaxblu][vrgcc]
E = inew[irmtchi[clss]][gaxblu][vrgcc]
F  = iracmag[clss][gaxblu][vrgcc]
print(len(NHID[vrrgss[vrgcc]]))
#print(FeHLm81err)
print('Galaxy GC  L18')
text = "\\"
a = 0
for id,nhid,lval,rval,c,d,e,f in zip(ID,NHID,L,R,C,D,E,F):
     a  = a +1
     if nhid =='none':
            print('$\dots$','&',id,'&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')
        #    print('%.4f & %.4f & %.4f & %.4f & %.4f \pm %.4f & %.4f \pm %.4f & %.4f \pm %.4f & ' % (nhid, id, lval, rval,c,c1,d,d1,e,e1))
     else:
          print(nhid,'&',id,'&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')
print(a)

#NH10
fnew = fits.open('/gdrive/My Drive/Astro Research/Nantais10_GC.fit')
specgc = fnew[1].data
specgccd = SkyCoord(ra=specgc['RAJ2000'],
                    dec=specgc['DEJ2000'],
                    unit=(u.deg, u.deg), frame='icrs')  

nargss, narssdist, _ = match_coordinates_sky(allgogccd,specgccd )
nagcc = narssdist.arcsec<2 # The ones that are added to L18 from Nantais are 2'' < and 0.5 of IRAC (2 galaxy) 
NH10 = specgc['ID']

NH10 = NH10[nargss[nagcc]]

L = ra[irmtchi[clss]][gaxblu][nagcc]
R=dec[irmtchi[clss]][gaxblu][nagcc]
C = gnew[irmtchi[clss]][gaxblu][nagcc]
D = rnew[irmtchi[clss]][gaxblu][nagcc]
E = inew[irmtchi[clss]][gaxblu][nagcc]
F  = iracmag[clss][gaxblu][vrgcc]

FeHLm81 = Z_H[vrrgss[vrgcc]]-0.94*a_Fe[vrrgss[vrgcc]]
FeHLm81err = np.sqrt(Z_error[vrrgss[vrgcc]]**2+a_error[vrrgss[vrgcc]]**2)
print(FeHLm81err)
print('Strong GC  NH10')

for nhid,lval,rval,c,d,e,f in zip(NH10,L,R,C,D,E,F):
     a  = a +1
     if nhid =='none':
            print('$\dots$','&','$\dots$','&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')
        #    print('%.4f & %.4f & %.4f & %.4f & %.4f \pm %.4f & %.4f \pm %.4f & %.4f \pm %.4f & ' % (nhid, id, lval, rval,c,c1,d,d1,e,e1))
     else:
          print(nhid,'&','$\dots$','&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')

Lgcc=  pd.read_csv('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/L18 catalog (2).csv',sep=',')
L18gccd = SkyCoord(ra=Lgcc['ra'],
                      dec=Lgcc['dec'],
                      unit=(u.deg, u.deg), frame='icrs')
print(Lgcc['a_error'])
ID = Lgcc['ID']
NHID = Lgcc['NHID']

L18gccd = SkyCoord(ra=Lgcc['ra'],
                      dec=Lgcc['dec'],
                      unit=(u.deg, u.deg), frame='icrs') 
allgogccd = SkyCoord(ra=ra[irmtchi[clss]][starblu],
                    dec=dec[irmtchi[clss]][starblu],
                    unit=(u.deg, u.deg), frame='icrs')  
print(allgogccd)
vrrgss, vrrssdist, _ = match_coordinates_sky(allgogccd,L18gccd)
vrgcc = vrrssdist.arcsec<2
print(len(vrrgss[vrgcc]),'nubmer of sample in L18',len(rascandb))

ID = ID[vrrgss[vrgcc]]
NHID=NHID[vrrgss[vrgcc]]
L = ra[irmtchi[clss]][starblu][vrgcc]
R=dec[irmtchi[clss]][starblu][vrgcc]
C = gnew[irmtchi[clss]][starblu][vrgcc]
D = rnew[irmtchi[clss]][starblu][vrgcc]
E = inew[irmtchi[clss]][starblu][vrgcc]
F  = iracmag[clss][starblu][vrgcc]
print('Strong GC  L18')
text = "\\"
a = 0
for id,nhid,lval,rval,c,d,e,f in zip(ID,NHID,L,R,C,D,E,F):
     a  = a +1
     if nhid =='none':
            print('$\dots$','&',id,'&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','star','\\\\')
        #    print('%.4f & %.4f & %.4f & %.4f & %.4f \pm %.4f & %.4f \pm %.4f & %.4f \pm %.4f & ' % (nhid, id, lval, rval,c,c1,d,d1,e,e1))
     else:
          print(nhid,'&',id,'&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')
print(a)

fnew = fits.open('/gdrive/My Drive/Astro Research/Nantais10_GC.fit')
specgc = fnew[1].data
specgccd = SkyCoord(ra=specgc['RAJ2000'],
                    dec=specgc['DEJ2000'],
                    unit=(u.deg, u.deg), frame='icrs')  

nargss, narssdist, _ = match_coordinates_sky(allgogccd,specgccd )
nagcc = narssdist.arcsec<2
NH10 = specgc['ID']

NH10 = NH10[nargss[nagcc]]

L = ra[irmtchi[clss]][starblu][nagcc]
R=dec[irmtchi[clss]][starblu][nagcc]
C = gnew[irmtchi[clss]][starblu][nagcc]
D = rnew[irmtchi[clss]][starblu][nagcc]
E = inew[irmtchi[clss]][starblu][nagcc]
F  = iracmag[clss][starblu][vrgcc]

print('Strong GC  NH10')

for nhid,lval,rval,c,d,e,f in zip(NH10,L,R,C,D,E,F):
     a  = a +1
     if nhid =='none':
            print('$\dots$','&','$\dots$','&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')
        #    print('%.4f & %.4f & %.4f & %.4f & %.4f \pm %.4f & %.4f \pm %.4f & %.4f \pm %.4f & ' % (nhid, id, lval, rval,c,c1,d,d1,e,e1))
     else:
          print(nhid,'&','$\dots$','&',round(lval,5),'&',round(rval,5),'&',round(c,2),'&',round(d,2),'&',round(e,2),'&',round(f,2),'&','galaxy','\\\\')

df =pd.DataFrame()
df['ra_GALAXY'] = ra[irmtchi[clss]][gaxblu]
df['dec_GALAXY'] =dec[irmtchi[clss]][gaxblu]
df2 =pd.DataFrame()
df2['ra_STAR'] =ra[irmtchi[clss]][starblu]
df2['dec_STAR'] =dec[irmtchi[clss]][starblu]
df3 =pd.DataFrame()
df3['ra_CLUSTER'] =ra[irmtchi[clss]][clsblu]
df3['dec_CLUSTER'] =dec[irmtchi[clss]][clsblu]

##ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu],'yv', alpha=1,markersize=5)
#ax2.plot(ra[irmtchi[clss]][clsblu], dec[irmtchi[clss]][clsblu]
print(df)
#print(df2)
df.to_csv('Galaxy-like objects.csv',index= None)
df2.to_csv('Star-like objects.csv',index= None)
df3.to_csv('Cluster-like objects.csv',index= None)

"""### Further clean with Gaia DR3 to get strong GC candidates"""

L = ra[irmtchi[clss]][gaxblu]
R = dec[irmtchi[clss]][gaxblu]
galir = SkyCoord(ra = L, dec = R, unit=(u.deg, u.deg), frame='icrs') 
print('galaxy')
#for lval,rval in zip(L,R):
#     print('(',lval,',',rval,')',',')

L = ra[irmtchi[clss]][starblu]
R = dec[irmtchi[clss]][starblu]
print('star')
starir = SkyCoord(ra = L, dec = R, unit=(u.deg, u.deg), frame='icrs') 
#for lval,rval in zip(L,R):
#     print('(',lval,',',rval,')',',')

     
L =  ra[irmtchi[clss]][clsblu]
R = dec[irmtchi[clss]][clsblu]
cluir = SkyCoord(ra = L, dec = R, unit=(u.deg, u.deg), frame='icrs')
print('Cluster-like GC')

fga = fits.open('/gdrive/My Drive/Astro Research/GAIA/M81GaiaDR3.fits.gz')
gaia = fga[1].data
gaiacd = SkyCoord(ra=gaia['ra'][:],
                      dec=gaia['dec'][:],
                      unit=(u.deg, u.deg), frame='icrs')
fga.close()
gara= gaia['ra'][:]
gadec= gaia['dec'][:]

gasuba, gasubast, _ = match_coordinates_sky(gaiacd,scoords)
gasd = gasubast.arcsec<1


gga = gaia['phot_g_mean_mag']
bpga = gaia['phot_bp_mean_mag'] 
rpga = gaia['phot_rp_mean_mag'] 
brega = gaia['phot_bp_rp_excess_factor']
aenga = gaia['astrometric_excess_noise']

gairba, gairbast, _ = match_coordinates_sky(gaiacd,starir)
gastar = gairbast.arcsec<0.5
gairga, gairgast, _ = match_coordinates_sky(gaiacd,galir)
gagal = gairgast.arcsec<0.5
#gacoba, gacobast, _ = match_coordinates_sky(gaiacd,conir)
#gacon = gacobast.arcsec<1
gaclba, gaclbast, _ = match_coordinates_sky(gaiacd,cluir)
gaclu = gaclbast.arcsec<0.5
plt.figure(figsize=(19,24),frameon=False)
ax2=plt.subplot(321)
ax2.plot(bpga[gasd]-gga[gasd],gga[gasd]-rpga[gasd], 'k.', alpha=0.2,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(bpga[gaclu]-gga[gaclu],gga[gaclu]-rpga[gaclu], 'rx', alpha=1,markersize=5) 
#ax2.plot(bpga[gacon]-gga[gacon],gga[gacon]-rpga[gacon], 'gv', alpha=1,markersize=5) 
ax2.plot(bpga[gastar]-gga[gastar],gga[gastar]-rpga[gastar], 'yv', alpha=1,markersize=5)
ax2.plot(bpga[gagal]-gga[gagal],gga[gagal]-rpga[gagal], 'bo', alpha=1,markersize=4) 
print(bpga[gagal]-gga[gagal],'galaxy')
ax2.set_ylabel('$(G-RP)_{GAIA}$',fontsize=20)
ax2.set_xlabel('$(BP-G)_{GAIA}$',fontsize=20)
ax2.set_ylim(-0.5,5)
ax2.set_xlim(-2.5,2)
#cx[0],ccx[-1],ccy[-1],ccy[0]
ax2.legend(loc='lower left', frameon=False)
ax2.set_title('Gaia DR3')

ax2=plt.subplot(322)
ax2.plot(gga[gasd],brega[gasd], 'k.', alpha=0.2,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gga[gaclu],brega[gaclu], 'rx', alpha=1,markersize=5) 
#ax2.plot(bpga[gacon]-gga[gacon],gga[gacon]-rpga[gacon], 'gv', alpha=1,markersize=5) 
ax2.plot(gga[gastar],brega[gastar], 'yv', alpha=1,markersize=5)
ax2.plot(gga[gagal],brega[gagal], 'bo', alpha=1,markersize=4) 
ax2.set_ylabel('phot_bp_rp_excess_factor',fontsize=20)
ax2.set_xlabel('$(G)_{GAIA}$',fontsize=20)
ax2.set_ylim(0,12)
ax2.set_xlim(15,22)
#cx[0],ccx[-1],ccy[-1],ccy[0]
ax2.legend(loc='lower left', frameon=False)

ax2=plt.subplot(323)
ax2.plot(gga[gasd],aenga[gasd], 'k.', alpha=0.2,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gga[gaclu],aenga[gaclu], 'rx', alpha=1,markersize=5) 
#ax2.plot(bpga[gacon]-gga[gacon],gga[gacon]-rpga[gacon], 'gv', alpha=1,markersize=5) 
ax2.plot(gga[gastar],aenga[gastar], 'yv', alpha=1,markersize=5)
ax2.plot(gga[gagal],aenga[gagal], 'bo', alpha=1,markersize=4) 
ax2.set_ylabel('astrometric_excess_noise',fontsize=20)
ax2.set_xlabel('$(G)_{GAIA}$',fontsize=20)
ax2.set_ylim(0,50)
ax2.set_xlim(15,22)
#cx[0],ccx[-1],ccy[-1],ccy[0]
ax2.legend(loc='lower left', frameon=False)

#Strong candidates at Gaia DR3
ga3gccl = np.where((gga[gaclu]-rpga[gaclu]>1.25)&(bpga[gaclu]-gga[gaclu]<0))
ga3gccl2 = np.where((gga[gagal]-rpga[gagal]>1.25)&(bpga[gagal]-gga[gagal]<0))
#IKN
iknga = np.where(gara[gaclu]>151.5)
print('ikn',gara[gaclu][iknga],gadec[gaclu][iknga])
ax2=plt.subplot(324)
ax2.plot(gara[gasd],gadec[gasd], 'k.', alpha=0.2,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gara[gaclu],gadec[gaclu], 'rx', alpha=1,markersize=5) 
ax2.plot(gara[gaclu][ga3gccl],gadec[gaclu][ga3gccl], 'bx', alpha=1,markersize=7) 
#ax2.plot(bpga[gacon]-gga[gacon],gga[gacon]-rpga[gacon], 'gv', alpha=1,markersize=5) 
ax2.plot(gara[gastar],gadec[gastar], 'yv', alpha=1,markersize=5)
ax2.plot(gara[gagal],gadec[gagal], 'bo', alpha=1,markersize=4) 
ax2.plot(gara[gagal][ga3gccl2],gadec[gagal][ga3gccl2], 'bo', alpha=1,markersize=7) 
ax2.set_ylabel('DEC',fontsize=20)
ax2.set_xlabel('RA',fontsize=20)
ax2.set_xlim(152.5,147+0.3)
ax2.set_ylim(min(dec),max(dec))
#ax2.set_ylim(0,50)
#ax2.set_xlim(15,22)
#cx[0],ccx[-1],ccy[-1],ccy[0]
ax2.legend(loc='lower left', frameon=False)

#Strong candidates at Gaia DR3
ga3gccl = np.where((gga[gaclu]-rpga[gaclu]>1)&(bpga[gaclu]-gga[gaclu]<0))
print(gara[gaclu][ga3gccl],gadec[gaclu][ga3gccl],len(gadec[gaclu][ga3gccl]))

gaia3gc = SkyCoord(ra=gara[gaclu][ga3gccl],
                      dec=gadec[gaclu][ga3gccl],
                      unit=(u.deg, u.deg), frame='icrs')

ga3suba, ga3subast, _ = match_coordinates_sky(gaia3gc,scoords)
ga3sd = ga3subast.arcsec<0.3

print(shp[ga3suba[ga3sd]],'Shp of Gaia DR3 of strong Candidates')


#print('contaminant at faint mag',ra[gasuba[cls]][gastcccl],dec[gasuba[cls]][gastcccl])
#plt.savefig('Gaia Dr2 confirmed GC CC.jpg',bbox_inches='tight',transparent=False) #, transparent=False
plt.show()
#print('number of identified star in Gaia DR2',len(gga[gastar]))

plt.gcf().set_dpi(200)

fga = fits.open('/gdrive/My Drive/Astro Research/GAIA/M81GaiaDR3.fits.gz')
gaia = fga[1].data
print(gaia['pm'])

"""### A final classifiction"""

gootgc =  SkyCoord(ra = gara[gaclu][ga3gccl], dec = gadec[gaclu][ga3gccl], unit=(u.deg, u.deg), frame='icrs') 
hgcir, hgcirdist, _ = match_coordinates_sky(iraccd,gootgc)
clssg = hgcirdist.arcsec< 0.5

clsblu = ((i0[irmtchi[clss]]-iracmag[clss]<-0.7)&(i0[irmtchi[clss]]-iracmag[clss]>-1.5)
&(i0[irmtchi[clss]]-iracmag[clss]<(-1.23+0.55*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))
&(i0[irmtchi[clss]]-iracmag[clss]>(-2.0867+1.18*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))&(shp[irmtchi[clss]] > 0.6))

#Cut for CGs
#bigbx = np.where(shp[irmtchi[clssg]][clsblug]>3)
#Nantais
#nant = #np.where(( inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu]<-0.7)&( inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu]>-1))
#148.520350

biggalaxy = np.where(brega[gagal]>2)
smagalaxy = np.where(brega[gagal]<2)
nant =  np.where((ra[irmtchi[clss]][gaxblu]>148.510350)&(ra[irmtchi[clss]][gaxblu]<148.530350))
plt.figure(figsize=(18*1.5,9*1.5),frameon=False)
#figure(1).clear()
#figure(1).set_size_inches(18,9)
ax2=plt.subplot(241)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shp[irmtchi[cls]], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')
#ax2.plot(inew[irmtchi[clss]][gaxblu],shpxx[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=4,label='Galaxy-like L18 GCs')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Galaxy-like L18 GCs')
ax2.plot(inew[irmtchi[clss]][starblu],shp[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=9,label='Star-like objects')
ax2.plot(inew[irmtchi[clssg]],shp[irmtchi[clssg]], 'bx', alpha=1,markersize=10,label='Strong GC candidates')
#ax2.plot(inew[irmtchi[clss]][clsblu],shp[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5,label='Cluster-like L18 GCs')
ax2.plot(inew[irmtchi[clss]][gaxblu],shp[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=9,label='Galaxy-like objects')
#ax2.plot(inew[irmtchi[clss]][gaxblu][gairga[gagal]][biggalaxy],shp[irmtchi[clss]][gaxblu][gairga[gagal]][biggalaxy], 'gv', alpha=1,markersize=9,label='big Galaxy-like objects')
ax2.plot(inew[irmtchi[clss]][gaxblu][gairga[gagal]][smagalaxy],shp[irmtchi[clss]][gaxblu][gairga[gagal]][smagalaxy], 'yv', alpha=1,markersize=9,label='small Galaxy-like objects')
#ax2.plot(inew[irmtchi[clss]][testclublu], shp[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=9,label='Contaminant')
#ax2.plot(inew[irmtchi[cls]][blu], shpxx[irmtchi[cls]][blu],'g.', alpha=1,markersize=3)
ax2.set_xlabel('$i_{0}$',fontsize=23)
ax2.set_ylabel('Size$_{average}$',fontsize=23)
ax2.set_xlim(16,27)
ax2.set_ylim(0,6)
ax2.legend(loc='upper right', frameon=False)
print('size of galaxy',shp[irmtchi[clss]][gaxblu],'big in gaia',shp[irmtchi[clss]][gaxblu][gairga[gagal]][biggalaxy],'small',shp[irmtchi[clss]][gaxblu][gairga[gagal]][smagalaxy])
print('size of star',shp[irmtchi[clss]][starblu])
m82rv = np.where((dec[irmtchi[clss]][clsblu]>69.4))
smalga = np.where(shp[irmtchi[clss]][gaxblu]<0.6)
ax2=plt.subplot(242)
#Subaru Data black
ax2.plot(gnew-inew, inew, 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clssg]]-inew[irmtchi[clssg]], inew[irmtchi[clssg]], 'bx', alpha=1,markersize=10)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[clss]][clsblu][m82rv]-inew[irmtchi[clss]][clsblu][m82rv], inew[irmtchi[clss]][clsblu][m82rv], 'rx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu],'g.', alpha=1,markersize=3) missblu
ax2.set_xlabel('$(g-i)_{0}$',fontsize=23)
ax2.set_ylabel('$i_{0}$',fontsize=23)
ax2.set_xlim(-1,3.5)
ax2.set_ylim(27,16)
print(len(gnew[irmtchi[clssg]]),'nubmer of Strong GC')
print('total nubmer',len(gnew[irmtchi[clssg]])+len(gnew[irmtchi[clss]][starblu])+len(gnew[irmtchi[clss]][gaxblu])+len(gnew[irmtchi[clss]][testclublu]))
ax2=plt.subplot(243)
ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], rnew[irmtchi[cls]]-inew[irmtchi[cls]], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-rnew[irmtchi[clss]][gaxblu], rnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clss]][starblu]-rnew[irmtchi[clss]][starblu], rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-rnew[irmtchi[clss]][testclublu], rnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clssg]]-rnew[irmtchi[clssg]], rnew[irmtchi[clssg]]-inew[irmtchi[clssg]], 'bx', alpha=1,markersize=10)
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-r)_{0}$',fontsize=23)
ax2.set_ylabel('$(r-i)_{0}$',fontsize=23)
ax2.set_xlim(-0.5,2.5)
ax2.set_ylim(-0.5,2)

ax2=plt.subplot(246)
ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-rnew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clss]][starblu]-rnew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clssg]]-rnew[irmtchi[clssg]], inew[irmtchi[clssg]]-iracmag[clssg], 'bx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-rnew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[cls]][blu]-rnew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=1,markersize=2)
#ax2.plot(gnew[irmtchi[cls&starsmall[irmtchi]]]-rnew[irmtchi[cls&starsmall[irmtchi]]], inew[irmtchi[cls&starsmall[irmtchi]]]-iracmag[cls&starsmall[irmtchi]], 'r.', alpha=0.1,markersize=2,lw=0, markeredgecolor='none')
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-r)_{0}$',fontsize=23)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=23)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,4)
#print(gnew[irmtchi[clssg]][clsblug],rnew[irmtchi[clssg]][clsblug], inew[irmtchi[clssg]][clsblug],iracmag[clssg][clsblug])
#print(gnew[irmtchi[clssg]][clsblug]-rnew[irmtchi[clssg]][clsblug],inew[irmtchi[clssg]][clsblug]-iracmag[clssg][clsblug])

ax2=plt.subplot(245)
ax2.plot(rnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(rnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
ax2.plot(rnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=9)
ax2.plot(rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=9)
ax2.plot(rnew[irmtchi[clssg]]-inew[irmtchi[clssg]], inew[irmtchi[clssg]]-iracmag[clssg], 'bx', alpha=1,markersize=10)
#ax2.plot(rnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(rnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=9)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(r-i)_{0}$',fontsize=23)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=23)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,4)
ax2=plt.subplot(247)
ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[clss]][gaxblu][smalga]-inew[irmtchi[clss]][gaxblu][smalga], inew[irmtchi[clss]][gaxblu][smalga]-iracmag[clss][gaxblu][smalga], 'go', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[clss]][gaxblu][nant]-inew[irmtchi[clss]][gaxblu][nant], inew[irmtchi[clss]][gaxblu][nant]-iracmag[clss][gaxblu][nant], 'go', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clssg]]-inew[irmtchi[clssg]], inew[irmtchi[clssg]]-iracmag[clssg], 'bx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clssg]][clsblug][bigbx]-inew[irmtchi[clssg]][clsblug][bigbx], inew[irmtchi[clssg]][clsblug][bigbx]-iracmag[clssg][clsblug][bigbx], 'rx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clss]][missblu]-inew[irmtchi[clss]][missblu], inew[irmtchi[clss]][missblu]-iracmag[clss][missblu], 'g.', alpha=1,markersize=8)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=9)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=23)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=23)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,4)
#ax2.set_ylim(-2,-0.5)

ax2=plt.subplot(244)
ax2.plot(ra[irmtchi[cls]], dec[irmtchi[cls]], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(ra[irmtchi[clss]][gaxblu], dec[irmtchi[clss]][gaxblu],'bo', alpha=1,markersize=9)
#ax2.plot(ra[irmtchi[clss]][gaxblu][nant], dec[irmtchi[clss]][gaxblu][nant],'go', alpha=1,markersize=9)
#ax2.plot(ra[irmtchi[clss]][gaxblu][smalga], dec[irmtchi[clss]][gaxblu][smalga],'go', alpha=1,markersize=9)
ax2.plot(ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu],'yv', alpha=1,markersize=9)
ax2.plot(ra[irmtchi[clssg]], dec[irmtchi[clssg]],'bx', alpha=1,markersize=10) #[gairga[gagal]][smagalaxy]
ax2.plot(ra[irmtchi[clss]][gaxblu][gairga[gagal]][smagalaxy], dec[irmtchi[clss]][gaxblu][gairga[gagal]][smagalaxy],'go', alpha=1,markersize=9)
#ax2.plot(ra[irmtchi[clssg]][clsblug][bigbx], dec[irmtchi[clssg]][clsblug][bigbx],'rx', alpha=1,markersize=10)
#ax2.plot(ra[irmtchi[clss]][testclublu], dec[irmtchi[clss]][testclublu],'gv', alpha=1,markersize=9)
ax2.legend(loc='upper right', frameon=False)
ax2.set_xlabel('$RA$',fontsize=23)
ax2.set_ylabel('$Dec$',fontsize=23)
ax2.set_xlim(152.5,147)
ikngc = np.where(ra[irmtchi[clssg]]>151.5)
print('ikn strong gc',ra[irmtchi[clssg]][ikngc],dec[irmtchi[clssg]][ikngc], inew[irmtchi[clssg]][ikngc]-iracmag[clssg][ikngc])

#bigxxgc =  SkyCoord(ra = ra[irmtchi[clssg]][clsblug][bigbx], dec = dec[irmtchi[clssg]][clsblug][bigbx], unit=(u.deg, u.deg), frame='icrs') 
#hgcirga, hgcirdistga, _ = match_coordinates_sky(gaiacd,bigxxgc)
#clbxg = hgcirdistga.arcsec< 0.5

ga3gccl = np.where(brega[gaclu]>2)
#ax2.set_ylim(mdec[0]+0.3,mdec[1]-0.5)
ax2=plt.subplot(248)
ax2.set_ylim(0,10)
ax2.set_xlim(18,22)
plt.plot(gga[gasd], brega[gasd], 'k.', alpha=0.5,markersize=2,lw=0, markeredgecolor='none')
#plt.plot(bpga[gasd&gaclpec]-gga[gasd&gaclpec], gga[gasd&gaclpec]-rpga[gasd&gaclpec], 'bx', alpha=1,markersize=6 ,label='Confirmed GCs')
#plt.plot(bpga[clcc]-gga[clcc], gga[clcc]-rpga[clcc], 'rx', alpha=1,markersize=3 ,label='GCs subaru')
#plt.plot(bpga[gasd][gacl]-gga[gasd][gacl], gga[gasd][gacl]-rpga[gasd][gacl], 'g.', alpha=1,markersize=2,label='GC candidates')
#plt.plot(bplcand-glcand,glcand-rplcand, 'g.', alpha=1,markersize=4,label='GC candidates')
#plt.plot(bpga[gasd&gaclpec][badgagc]-gga[gasd&gaclpec][badgagc], gga[gasd&gaclpec][badgagc]-rpga[gasd&gaclpec][badgagc], 'bx', alpha=1,markersize=10 ,label='Strong GC candidates')
plt.plot(gga[gastar],brega[gastar], 'yv', alpha=1,markersize=9)
plt.plot(gga[gagal],brega[gagal], 'bo', alpha=1,markersize=9)
#plt.plot(gga[gasd][gasdd][redir],brega[gasd][gasdd][redir], 'r.', alpha=1,markersize=14)
plt.plot(gga[gaclu][ga3gccl], brega[gaclu][ga3gccl], 'bx', alpha=1,markersize=10)#
#plt.plot(bpga[gasd][gacl][cmdgc]-gga[gasd][gacl][cmdgc], gga[gasd][gacl][cmdgc]-rpga[gasd][gacl][cmdgc], 'r.', alpha=1,markersize=2,label='contaminants')
#plt.plot(bpga[gaclpec][ghogaia]-gga[gaclpec][ghogaia], gga[gaclpec][ghogaia]-rpga[gaclpec][ghogaia], 'rv', alpha=1,markersize=4 ,label='GHOST GCs ')
#ax2.add_patch(PathPatch(pgcga,facecolor='none',edgecolor='orange',lw=1.5))
#plt.plot(bpga-gga, b, 'k.', markersize=0.1,label='color edge')
#ax2.add_patch(PathPatch(pgcga ,facecolor='none',edgecolor='red',lw=1.5))
ax2.set_xlabel('$G$ [mag]',fontsize=20)
ax2.set_ylabel('BP/RP Excess Factor',fontsize=20)

#ax2.plot(bpga[gasd]-gga[gasd],gga[gasd]-rpga[gasd], 'k.', alpha=0.2,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(bpga[gastar]-gga[gastar],gga[gastar]-rpga[gastar], 'yv', alpha=1,markersize=9)
#ax2.plot(bpga[gacon]-gga[gacon],gga[gacon]-rpga[gacon], 'gv', alpha=1,markersize=9) 
#ax2.plot(bpga[gagal]-gga[gagal],gga[gagal]-rpga[gagal], 'bo', alpha=1,markersize=9) 
#ax2.plot(bpga[gaclu][ga3gccl]-gga[gaclu][ga3gccl],gga[gaclu][ga3gccl]-rpga[gaclu][ga3gccl], 'bx', alpha=1,markersize=10) 
#ax2.set_ylabel('$(G-RP)_{Gaia}$',fontsize=23)
#ax2.set_xlabel('$(BP-G)_{Gaia}$',fontsize=23)
#ax2.set_ylim(-0.5,4)
#ax2.set_xlim(-2.5,2)
#ax2.legend(loc='lower left', frameon=False)
plt.tight_layout()
plt.legend()
plt.gcf().set_dpi(300)
plt.savefig('L18 final classification.jpg',bbox_inches='tight',transparent=False,dpi=300) #, transparent=False
plt.show()

#print(brega[clbxg])
#print(aenga[clbxg])

#The one obivous GC
nant2 =  np.where((ra[irmtchi[clss]][gaxblu]>148.252970)&(ra[irmtchi[clss]][gaxblu]<148.272970)) #148.262970
nantt = np.where((ra[irmtchi[cls]]>148.262960)&(ra[irmtchi[cls]]<148.262980))
print(g0[irmtchi[clss]][gaxblu][nant2])
#148.510350

plt.figure(figsize=(16,8),frameon=False)
ax2=plt.subplot(121)
ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gnew[irmtchi[cls]][nantt]-inew[irmtchi[cls]][nantt], inew[irmtchi[cls]][nantt]-iracmag[cls][nantt], 'ro', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
ax2.plot(gnew[irmtchi[clss]][gaxblu]-inew[irmtchi[clss]][gaxblu], inew[irmtchi[clss]][gaxblu]-iracmag[clss][gaxblu], 'bo', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clss]][gaxblu][nant2]-inew[irmtchi[clss]][gaxblu][nant2], inew[irmtchi[clss]][gaxblu][nant2]-iracmag[clss][gaxblu][nant2], 'go', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=9)
ax2.plot(gnew[irmtchi[clssg]]-inew[irmtchi[clssg]], inew[irmtchi[clssg]]-iracmag[clssg], 'bx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clssg]][clsblug][bigbx]-inew[irmtchi[clssg]][clsblug][bigbx], inew[irmtchi[clssg]][clsblug][bigbx]-iracmag[clssg][clsblug][bigbx], 'rx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clss]][missblu]-inew[irmtchi[clss]][missblu], inew[irmtchi[clss]][missblu]-iracmag[clss][missblu], 'g.', alpha=1,markersize=8)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=9)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=23)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=23)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,4)
#ax2.set_ylim(-2,-0.5)


ax2=plt.subplot(122)
ax2.plot(ra[irmtchi[cls]], dec[irmtchi[cls]], 'k.', alpha=0.16,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(ra[irmtchi[cls]][nantt], dec[irmtchi[cls]][nantt], 'ro', alpha=1,markersize=9)
ax2.plot(ra[irmtchi[clss]][gaxblu], dec[irmtchi[clss]][gaxblu],'bo', alpha=1,markersize=9)
ax2.plot(ra[irmtchi[clss]][gaxblu][nant2], dec[irmtchi[clss]][gaxblu][nant2],'go', alpha=1,markersize=9)
ax2.plot(ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu],'yv', alpha=1,markersize=9)
ax2.plot(ra[irmtchi[clssg]], dec[irmtchi[clssg]],'bx', alpha=1,markersize=10)
#ax2.plot(ra[irmtchi[clssg]][clsblug][bigbx], dec[irmtchi[clssg]][clsblug][bigbx],'rx', alpha=1,markersize=10)
#ax2.plot(ra[irmtchi[clss]][testclublu], dec[irmtchi[clss]][testclublu],'gv', alpha=1,markersize=9)
ax2.legend(loc='upper right', frameon=False)
ax2.set_xlabel('$RA$',fontsize=23)
ax2.set_ylabel('$Dec$',fontsize=23)
ax2.set_xlim(152.5,146.5)

plt.tight_layout()

"""# Subaru Candidates"""

strogccd = SkyCoord(ra = ra[irmtchi[clssg]], dec = dec[irmtchi[clssg]],
                    unit=(u.deg, u.deg), frame='icrs')

#hgcsu, hgcsudist, _ = match_coordinates_sky(scoords,strogccd)
#cls = hgcsudist.arcsec<1

#Include ikn GC
iknknowngc = SkyCoord(["10h08m07.12s +68d23m36.06s","10h08m10.80s +68d24m04.95s","10h08m05.27s +68d24m33.16s","10h08m04.80s +68d24m53.07s","10h08m05.52s +68d24m57.35s"], frame="icrs")
strogccd2 = SkyCoord(ra = np.hstack([ra[irmtchi[clssg]],iknknowngc.ra.deg]), 
                     dec = np.hstack([dec[irmtchi[clssg]],iknknowngc.dec.deg]),
                    unit=(u.deg, u.deg), frame='icrs')
print(strogccd2)
hgcsuy, hgcsudisty, _ = match_coordinates_sky(scoords,strogccd )
cls = hgcsudisty.arcsec<0.2
print(len(hgcsuy[cls]))

sm=0.6;bi=2 #2
#cgccstu, = np.where( 
#               # ((abs(gr0 - locus_spline(ri0))< 0.55) 
               # &((gr0 - locus_spline(ri0))<0)
                # & 
 #                (shp < bi) &(shp > sm)
 #              & (gi0 > 0.25) &(gi0<1.25) 
 #               & (i0 > 17.5) & (i0 < 21)) #&(ra<153)&(ra>147.5)&(dec<70.5)&(dec>67.95)) 

cgccstu, = np.where( (shp < bi) &(shp > sm)
               & (gi0 > 0.25) &(gi0<1.25) 
                & (i0 > 17.5) & (i0 < 21)&(r0>0))

m81group = np.where((ra<153)&(ra>147.5)&(dec<70.5)&(dec>67.95))
irgs = SkyCoord(ra=ra[cgccstu],
                    dec=dec[cgccstu],
                    unit=(u.deg, u.deg), frame='icrs')  
succ = SkyCoord(ra=ra[cls],
                    dec=dec[cls],
                    unit=(u.deg, u.deg), frame='icrs')  
irsugss, irsugssdist, _ = match_coordinates_sky(succ,irgs)
gsirsu = irsugssdist.arcsec<1
print('#of overlap',len(irsugss[gsirsu])) #One strong GC missing r band
iclcand = np.delete(i0[cgccstu],irsugss[gsirsu],axis=0) 
shpclcand = np.delete(shp[cgccstu],irsugss[gsirsu],axis=0)
gclcand = np.delete(g0[cgccstu],irsugss[gsirsu],axis=0) 
rclcand = np.delete(r0[cgccstu],irsugss[gsirsu],axis=0) 
raclcand = np.delete(ra[cgccstu],irsugss[gsirsu],axis=0) 
decclcand = np.delete(dec[cgccstu],irsugss[gsirsu],axis=0) 

iclcand = iclcand[iclcand>0]
shpclcand = shpclcand[shpclcand>0]
gclcand =gclcand[gclcand>0]
rclcand = rclcand[rclcand>0]
raclcand = raclcand[raclcand>0]
decclcand = decclcand[decclcand>0]

raclcanda = raclcand
decclcanda = decclcand
gclcanda = gclcand
rclcanda = rclcand
iclcanda = iclcand

sf = 0.83 ; spd = 0.8 ; stw = 0.2
startf = ((abs(gr0 - locus_spline(ri0)) < spd*dgr0 + stw) & (shp < sf))
star, = np.where(startf)

gd, = np.where( (gi0[star] > -1) & (gi0[star] < 3.5) &
                (ri0[star] > -1) & (ri0[star] < 2.5) )
good = star[gd]
cmd,cmdy,cmdx = np.histogram2d(i0[good],gi0[good],bins=(540,270),normed=False)
cmds = img_scale.log(cmd,scale_min=1,scale_max=1.e6)

cc,ccy,ccx = np.histogram2d(ri0[good],gr0[good],bins=(540,540),normed=False)
ccs = img_scale.log(cc,scale_min=1,scale_max=1.e6)

csd,csdy,csdx = np.histogram2d(i0[good],shp[good],bins=(540,540),normed=False)
csds = img_scale.log(csd,scale_min=1,scale_max=1.e6)

#3200/192*
iknw = np.where((dec[cls]>68.41375156)&(dec[cls]<68.41575156))
#fig = plt.figure(figsize=(16*1.8/3*2,5.5*1.8),frameon=False)
fig = plt.figure(figsize=(10,5),frameon=False)
ax = plt.subplot(1,2,1)
ax.tick_params(axis='both',which='both',direction='in',labelsize=20)
ax.set_xlabel(r'$i_0$',fontsize=20)
ax.set_ylabel('Size$_{average}$',fontsize=20)
ax.set_xlim(16,28)
ax.set_ylim(0,2.2)
ax.scatter(i0,shp,s=0.1,c='grey',alpha=0.2)
ax.scatter(iclcand,shpclcand,
           c='green',s=5,alpha=0.6,label='GC Candidates')
ax.plot(i0[cls],shp[cls], 'bx', alpha=1,markersize=8,label='Strong GC Candidates')
#ax.plot(i0[cls][iknw],shp[cls][iknw], 'rx', alpha=1,markersize=12,label='ikn')
print(g0[cls][iknw],r0[cls][iknw],i0[cls][iknw],ra[cls][iknw],dec[cls][iknw])
#ax.plot(i0[cls][iknnf],shp[cls][iknnf], 'bx', alpha=1,markersize=5,label='IKN Confirmed GCs')
#ax.scatter(g0[cls][gaxcl],shp[cls][gaxcl],s=14,alpha=1,c='r')
#ax.scatter(g0[cgccstu][conta],shp[cgccstu][conta],s=5,alpha=1,c='y',label='contaminats')
#ax.legend(loc='upper right', frameon=False)
ax.legend(loc='lower left', frameon=False)
#print(shp[cls])

bigger = np.where(shp[cls]>1)
ikn = np.where(ra[cls]>151.5)
print('ikn',ra[cls][bigger],dec[cls][bigger],min(dec[cls][ikn]),dec[cls][ikn])

ax2 = plt.subplot(1,2,2)
ax2.tick_params(axis='both',which='both',direction='in',labelsize=20)
ax2.set_xlabel(r'$(g{-}i)_0$',fontsize=20)
ax2.set_ylabel(r'$i_0$',fontsize=20)
ax2.set_xlim(-1,3.5)
ax2.set_ylim(26.5,16)
#ax2.imshow(cmds,interpolation='nearest',
#          extent=[cmdx[0],cmdx[-1],cmdy[-1],cmdy[0]],
#          aspect='auto', cmap='Greys',alpha=0.6)
ax2.scatter(gi0,i0,
         c='grey',s=0.1,alpha=0.2)
#ax2.imshow(cmds,interpolation='nearest',
##          extent=[cmdx[0],cmdx[-1],cmdy[-1],cmdy[0]],
 #         aspect='auto', cmap='Greys',alpha=1)
ax2.scatter(gclcand-iclcand,iclcand,
         c='green',s=5,alpha=0.6)
#ax.scatter(gi0[cgccstu][conta], i0[cgccstu][conta],
#            c='y',s=5,alpha=1)  
#ax.scatter(gi0[cls], i0[cls],
#            c='blue',s=14,alpha=1)
ax2.plot(gi0[cls],i0[cls], 'bx', alpha=1,markersize=9)
#ax.scatter(gi0[cls][gaxcl], i0[cls][gaxcl],
#            c='r',s=14,alpha=1)
#ax.scatter(ri0[ecircle], i0[ecircle],
#            c='yellow',s=5,alpha=1)
ax2.legend(loc='upper right', frameon=False)
plt.gcf().set_dpi(300)
plt.tight_layout()
plt.savefig('HSC new selection 2.jpg',bbox_inches='tight',transparent=False,dpi=300)
plt.show()


print('#of candidates=',len(ra[cgccstu])-len(irsugss[gsirsu]),len(iclcand),len(raclcand)) 

#3 confirmed from IKN
#how to know what is the best selection? #, transparent=False
print(gr0[cls],ri0[cls])



fig = plt.figure(figsize=(8,8),frameon=False)
ax = plt.subplot(1,1,1)
#ax.tick_params(axis='both',which='both',direction='in',labelsize=25)
ax.set_xlabel(r'RA',fontsize=14)
ax.set_ylabel('DEC',fontsize=14)
ax.set_xlim(153.5,146.5)
ax.set_ylim(67.5,71)
ax.scatter(ra[m81group],dec[m81group],s=0.1,c='grey',alpha=0.02)
#ax.imshow(csds,interpolation='nearest',
#          extent=[csdx[0],csdx[-1],csdy[-1],csdy[0]],
#          aspect='auto', cmap='Greys',alpha=1)
ax.scatter(raclcand,decclcand,
           c='green',s=8,alpha=0.6,label='GC Candidates')
ax.plot(ra[cls],dec[cls], 'bx', alpha=1,markersize=12,label='Strong GC Candidates')
#ax.plot(i0[cls][iknnf],shp[cls][iknnf], 'bx', alpha=1,markersize=5,label='IKN Confirmed GCs')
#ax.scatter(g0[cls][gaxcl],shp[cls][gaxcl],s=14,alpha=1,c='r')
#ax.scatter(g0[cgccstu][conta],shp[cgccstu][conta],s=5,alpha=1,c='y',label='contaminats')
#ax.legend(loc='upper right', frameon=False)
ax.legend(loc='lower left', frameon=False)
plt.tight_layout()
#plt.gcf().set_dpi(200)
#print(shp[cls])

#fig = plt.figure(figsize=(16*2,5.5*2),frameon=False)
fig = plt.figure(figsize=(10,5.5),frameon=False)
ax = plt.subplot(1,2,1)
ax.tick_params(axis='both',which='both',direction='in',labelsize=18)
ax.set_xlabel(r'$i_0$',fontsize=25)
ax.set_ylabel('0.5(X+Y) $(\prime\prime)$',fontsize=25)
ax.set_xlim(17,28)
ax.set_ylim(0,2.2)
ax.scatter(i0,shp,s=0.1,c='grey',alpha=0.4)
ax.scatter(iclcand,shpclcand,
           c='green',s=4,alpha=0.6,label='GC Candidates')
ax.plot(i0[cls],shp[cls], 'bx', alpha=1,markersize=10,label='Strong GC Candidates')
#ax.plot(i0[cls][iknnf],shp[cls][iknnf], 'bx', alpha=1,markersize=5,label='IKN Confirmed GCs')
#ax.scatter(g0[cls][gaxcl],shp[cls][gaxcl],s=14,alpha=1,c='r')
#ax.scatter(g0[cgccstu][conta],shp[cgccstu][conta],s=5,alpha=1,c='y',label='contaminats')
#ax.legend(loc='upper right', frameon=False)
ax.legend(loc='lower left', frameon=False)
#print(shp[cls])

gd, = np.where( (gi0 > -1) & (gi0 < 3.5) &
                (ri0 > -1) & (ri0 < 2.5) )
cmd,cmdy,cmdx = np.histogram2d(i0[gd],gi0[gd],bins=(250,125),normed=False)
cmds = img_scale.log(cmd,scale_min=1,scale_max=1.e6)


ax = plt.subplot(1,2,2)
ax.tick_params(axis='both',which='both',direction='in',labelsize=18)
ax.set_xlabel(r'$(g{-}i)_0$',fontsize=25)
ax.set_ylabel(r'$i_0$',fontsize=25)
ax.set_xlim(-1,3.5)
ax.set_ylim(26.5,15)
#ax.imshow(cmds,interpolation='nearest',
#          extent=[cmdx[0],cmdx[-1],cmdy[-1],cmdy[0]],
#          aspect='auto', cmap='Greys',alpha=0.6)
ax.scatter(gi0,i0,
         c='grey',s=0.1,alpha=0.4)
ax.scatter(gclcand-iclcand,iclcand,
         c='green',s=5,alpha=0.6)
#ax.scatter(gi0[cgccstu][conta], i0[cgccstu][conta],
#            c='y',s=5,alpha=1)  
#ax.scatter(gi0[cls], i0[cls],
#            c='blue',s=14,alpha=1)
ax.plot(gi0[cls],i0[cls], 'bx', alpha=1,markersize=10)
#ax.scatter(gi0[cls][gaxcl], i0[cls][gaxcl],
#            c='r',s=14,alpha=1)
#ax.scatter(ri0[ecircle], i0[ecircle],
#            c='yellow',s=5,alpha=1)
ax.legend(loc='upper right', frameon=False)
#Color Color diagram
#ax2 = plt.subplot(1,3,3)
#ax2.tick_params(axis='both',which='both',direction='in',labelsize=23)
##ax2.set_xlabel(r'$(g{-}r)_0$',fontsize=30)
#ax2.set_ylabel(r'$(r{-}i)_0$',fontsize=30)
#ax2.set_xlim(-0.5,2.3)
#ax2.set_ylim(-0.5,2)
#ax2.imshow(ccs,interpolation='nearest',
#                     extent=[ccx[0],ccx[-1],ccy[-1],ccy[0]],
#          aspect='auto', cmap='Greys',alpha=0.525)
#ax2.scatter(gclcand-rclcand,rclcand-iclcand,
#         c='green',s=8,alpha=1)
#ax2.plot(gr0[cls],ri0[cls], 'bx', alpha=1,markersize=12)
#ax2.plot(locus_spline(ri_stlrlc),ri_stlrlc,'r-',lw=1.5,label='stellar locus')
#ax2.legend(loc='upper left', frameon=False)
plt.tight_layout()
plt.gcf().set_dpi(180)
plt.show()
plt.savefig('HSC new selection.jpg',bbox_inches='tight',transparent=False)
print('#of candidates=',len(ra[cgccstu])-11,len(iclcand),len(raclcand)) #3 confirmed from IKN
#how to know what is the best selection? #, transparent=False

"""### IKN"""

sm=0.6;bi=2
cgccstu, = np.where( 
                ((abs(gr0 - locus_spline(ri0))< 0.55) 
                &((gr0 - locus_spline(ri0))<0)
                 & (shp < bi) &(shp > sm)
               & (gi0 > 0.25) &(gi0<1.25) 
                & (i0 > 17.5) & (i0 < 21))&(ra<152.35)&(ra>151.85)&(dec<68.56)&(dec>68.35))

m81group = np.where((ra<153)&(ra>147.5)&(dec<70.5)&(dec>67.95))
hgcsuy, hgcsudisty, _ = match_coordinates_sky(scoords,strogccd2 )
cls = hgcsudisty.arcsec<0.2
irgs = SkyCoord(ra=ra[cgccstu],
                    dec=dec[cgccstu],
                    unit=(u.deg, u.deg), frame='icrs')  
succ = SkyCoord(ra=ra[cls],
                    dec=dec[cls],
                    unit=(u.deg, u.deg), frame='icrs')  
irsugss, irsugssdist, _ = match_coordinates_sky(succ,irgs)
gsirsu = irsugssdist.arcsec<1
print('#of overlap',len(irsugss[gsirsu]))
iclcand = np.delete(i0[cgccstu],irsugss[gsirsu],axis=0) 
shpclcand = np.delete(shp[cgccstu],irsugss[gsirsu],axis=0)
gclcand = np.delete(g0[cgccstu],irsugss[gsirsu],axis=0) 
rclcand = np.delete(r0[cgccstu],irsugss[gsirsu],axis=0) 
raclcand = np.delete(ra[cgccstu],irsugss[gsirsu],axis=0) 
decclcand = np.delete(dec[cgccstu],irsugss[gsirsu],axis=0) 

fig = plt.figure(figsize=(8,8),frameon=False)
ax = plt.subplot(1,1,1)
#ax.tick_params(axis='both',which='both',direction='in',labelsize=25)
ax.set_xlabel(r'RA',fontsize=30)
ax.set_ylabel('DEC',fontsize=30)
ax.set_xlim(153.5,146.5)
ax.set_ylim(67.5,71)
ax.scatter(ra[m81group],dec[m81group],s=0.1,c='grey',alpha=0.05)
#ax.imshow(csds,interpolation='nearest',
#          extent=[csdx[0],csdx[-1],csdy[-1],csdy[0]],
#          aspect='auto', cmap='Greys',alpha=1)
ax.scatter(raclcand,decclcand,
           c='green',s=8,alpha=0.6,label='GC Candidates')
print(len(raclcand))
ax.plot(ra[cls],dec[cls], 'bx', alpha=1,markersize=12,label='Strong GC Candidates')
#ax.plot(i0[cls][iknnf],shp[cls][iknnf], 'bx', alpha=1,markersize=5,label='IKN Confirmed GCs')
#ax.scatter(g0[cls][gaxcl],shp[cls][gaxcl],s=14,alpha=1,c='r')
#ax.scatter(g0[cgccstu][conta],shp[cgccstu][conta],s=5,alpha=1,c='y',label='contaminats')
#ax.legend(loc='upper right', frameon=False)
ax.legend(loc='lower left', frameon=False)
ax.set_xlim(152.5,151.7)
ax.set_ylim(68.3,68.6)

import pandas as pd
df =pd.DataFrame()
df['ra_IKN'] = raclcand
df['dec_IKN'] =decclcand
df['shp'] = shpclcand
#df2
df.to_csv('IKN Subaru candidates.csv',index= None)

"""# IRAC candidates"""

def ra2kpc(deg):
    ddeg = (deg-m81_ra)*np.cos(np.pi/180.*m81_dec)            
    return ddeg*np.pi/180. * dm81

sf = 0.83 ; spd = 0.8 ; stw = 0.2
startfa = ((abs(gr0 - locus_spline(ri0)) < spd*dgr0 + stw) & (shp < sf))
star, = np.where(startfa)

c = dmod-dmodm81
xyp = np.empty([len(star),2])
xyp[:,0] = gi0[star]
xyp[:,1] = i0[star]

sf = 0.83 ; spd = 0.8 ; stw = 0.2
startf = ((abs(gr0 - locus_spline(ri0)) < spd*dgr0 + stw) & (shp < sf))
star, = np.where(startf)

c = dmod-dmodm81
xyp = np.empty([len(star),2])
xyp[:,0] = gi0[star]
xyp[:,1] = i0[star]
    
prgb = Path([(1.1,26+c-0.7),(1.9,26+c-0.7),
                 (2.8,24.5+c),(2.25,24.2+c),
                 (1.5,24.2+c),(1.1,26+c-0.7)])
pbrgb = Path([(0.95,26+c-0.7),(1.25,26+c-0.7),
             (1.75,24.2+c),
             (1.5,24.2+c),(0.95,26+c-0.7)])
inrgb = prgb.contains_points(xyp)
rgb = star[np.where(inrgb==True)]
inbrgb = pbrgb.contains_points(xyp)
brgb = star[np.where(inbrgb==True)]



#pheb = Path([(0.65,26),(0.95,26),(1.81,21.3),(1.51,21.3),(0.65,26)])
# The above is from 300Myr and younger; there is some galaxy contamination in this one...
# https://docs.google.com/document/d/1K16q9UHAELdvGw8NYBLQzPAaaNLXbovGLZcjlTTFX7o/edit?ts=5d7a71ef
pheb = Path([(0.79+0.14,25.25+c-0.7),(1.09+0.14,25.25+c-0.7),(1.81,21.3+c),(1.51,21.3+c),(0.79+0.14,25.25+c-0.7)])
inheb = pheb.contains_points(xyp)
heb = star[np.where(inheb==True)]
                 
pms = Path([(-0.8,25.5+c-0.7),(-0.3,25.5+c-0.7),
                             (-0.2,23+c),(-0.7,23+c),
                             (-0.8,25.5+c-0.7)])
inms = pms.contains_points(xyp)
ms = star[np.where(inms==True)]

mra = [np.min(ra[rgb]),np.max(ra[rgb])]
mdec=[np.min(dec[rgb]),np.max(dec[rgb])]
#-----  for mdec and mra


#irac = ascii.read('/gdrive/My Drive/Astro Research/M81_IRAC.csv')
#iraccd = SkyCoord(ra=irac['ra'][:],
#                      dec=irac['dec'][:],
#                      unit=(u.deg, u.deg), frame='icrs')
# Match with Subaru Data?
irmtchi, irmtchdist, _ = match_coordinates_sky(iraccd,scoords)
#3.6um
#iracmag = -2.5*np.log10(irac['i1_f_ap1']*1e-6/3631.) # AB mag

irra = irac['ra'][irac['i1_f_ap1']  != 'null']
irdec = irac['dec'][irac['i1_f_ap1']  != 'null']
# Match with Subaru Data?
#irmtchi, irmtchdist, _ = match_coordinates_sky(scoords,iraccd[irmtchi])
#3.6um
iracap1 = irac['i1_f_ap1'][irac['i1_f_ap1']  != 'null']
iracap1 = np.asarray(iracap1, dtype='float64')
#iracap1 = float(irac['i1_f_ap1'])
iracmag = -2.5*np.log10(iracap1*1e-6/3631.) 

diracap1 = irac['i1_df_ap1'][irac['i1_df_ap1']  != 'null']
diracap1 = np.asarray(diracap1, dtype='float64')
#print(iracap1,diracap1)
#iracap1 = float(irac['i1_f_ap1'])
diracmag = -2.5*np.log10((iracap1+diracap1)*1e-6/3631.) +2.5*np.log10((iracap1-diracap1)*1e-6/3631.) 

cls = irmtchdist.arcsec<0.75



#gootgc = SkyCoord(ra = ra[irmtchi[clssg]], dec = dec[irmtchi[clssg]],
#                    unit=(u.deg, u.deg), frame='icrs')
#All halo GCs in IRAC
hgcir, hgcirdist, _ = match_coordinates_sky(iraccd,strogccd) # Add IKN GCs originally gootgc
clss = hgcirdist.arcsec< 0.5
print(len(hgcir[clss]))

from mpl_toolkits.axes_grid1 import make_axes_locatable
from scipy.optimize import curve_fit
from astropy.modeling import models, fitting
#blu = ((i0[irmtchi[cls]]-iracmag[cls]<-0.7)&(i0[irmtchi[cls]]-iracmag[cls]>-1.5)
#&(i0[irmtchi[cls]]-iracmag[cls]<(-1.23+0.55*(g0[irmtchi[cls]]-i0[irmtchi[cls]])))
#&(i0[irmtchi[cls]]-iracmag[cls]>(-2.0867+1.18*(g0[irmtchi[cls]]-i0[irmtchi[cls]])))#-2.0867
#&(i0[irmtchi[cls]]-iracmag[cls]<(-2.1375+1.75*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-2.1375
#& (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55)&(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]])<0)
#                 & (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) #&  
   #               (shpxx[irmtchi[cls]] < bigg) &(shpxx[irmtchi[cls]] > smaa) &
   #               (shpyy[irmtchi[cls]] < bigg) &(shpyy[irmtchi[cls]] > smaa)
#                 & (gi0[irmtchi[cls]] > 0.25) & (gi0[irmtchi[cls]] < 1.25) 
#                 & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 21 ))
       #( (dec[irmtchi[cls]]<68.6) |(dec[irmtchi[cls]]>69.75)))

# Would want a more restricted selection in color
smaa = 0.6 ; bigg =  2#1#2
high =  -0.55#-0.73
low = -1.2
#blu = ((i0[irmtchi[cls]]-iracmag[cls]<high)&(i0[irmtchi[cls]]-iracmag[cls]>low)
#&(i0[irmtchi[cls]]-iracmag[cls]<(-0.3-0.55*(g0[irmtchi[cls]]-i0[irmtchi[cls]])))
#&(i0[irmtchi[cls]]-iracmag[cls]>(-2.12+1.18*(g0[irmtchi[cls]]-i0[irmtchi[cls]])))#-2.0867
#&(i0[irmtchi[cls]]-iracmag[cls]<(-2.1375+1.75*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-2.1375
#& (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55) &(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]])<0)
#                 & (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) #&  
   #               (shpxx[irmtchi[cls]] < bigg) &(shpxx[irmtchi[cls]] > smaa) &
   #               (shpyy[irmtchi[cls]] < bigg) &(shpyy[irmtchi[cls]] > smaa)
#                 & (gi0[irmtchi[cls]] > 0.25) & (gi0[irmtchi[cls]] < 1.25) 
#                 & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 21 )) #Fainter than 21 doesn't help
       #( (dec[irmtchi[cls]]<68.6) |(dec[irmtchi[cls]]>69.75)))

#No r band or color color selection

blu = ((i0[irmtchi[cls]]-iracmag[cls]<high)&
       (i0[irmtchi[cls]]-iracmag[cls]>low)
#&(i0[irmtchi[cls]]-iracmag[cls]<(-0.23-0.55*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-0.3-0.55 0.23.  0.7-1.5
&(i0[irmtchi[cls]]-iracmag[cls]>( -1.9+0.95*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-2.0867 -2.13+1.18. (lose two)  -2.22+1.18 Now inlcude the ikn GC -1.9+0.95 lose one gaia star
&(i0[irmtchi[cls]]-iracmag[cls]<(-2.1375+1.75*(g0[irmtchi[cls]]-i0[irmtchi[cls]])))
 #-2.1375+1.75 IKN -2.24+2.4
#& (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55) &(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]])<0)
                 & 
       (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) #&  
   #               (shpxx[irmtchi[cls]] < bigg) &(shpxx[irmtchi[cls]] > smaa) &
   #               (shpyy[irmtchi[cls]] < bigg) &(shpyy[irmtchi[cls]] > smaa)
                 & (gi0[irmtchi[cls]] > 0.25) & (gi0[irmtchi[cls]] < 1.25) 
                 & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 21 ))  #Go to 23 should be as faint as it can go, but I don't think it will add many GCs.
       #( (dec[irmtchi[cls]]<68.6) |(dec[irmtchi[cls]]>69.75)))

#Subaru Candidates with IRAC
blusu = ( #(abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55)&(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]])<0)
          #       &
          (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) 
                 & (gi0[irmtchi[cls]] > 0.25) & (gi0[irmtchi[cls]] < 1.25) 
                 & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 21 ))



x = np.linspace(0,1.5,100)
y1 = -0.23-0.55*x
y2 = -1.9+0.95*x
#y3 = -2.1375+1.75*x
y3 = -2.24+2.4*x

#clsblu = ((i0[irmtchi[clss]]-iracmag[clss]<-0.7)&(i0[irmtchi[clss]]-iracmag[clss]>-1.5)
#&(i0[irmtchi[clss]]-iracmag[clss]<(-1.23+0.55*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))
#&(i0[irmtchi[clss]]-iracmag[clss]>(-2.0867+1.18*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))&(shp[irmtchi[clss]] > 0.6))

#bstgc = SkyCoord([ (148.87477581, 68.7636631)] ,frame='icrs', unit='deg') 

#delete overlaping candidates 
irgs = SkyCoord(ra=ra[irmtchi[cls]][blu], #148.87477581, 68.7636631
                    dec=dec[irmtchi[cls]][blu],
                    unit=(u.deg, u.deg), frame='icrs')  
succ = SkyCoord(ra=ra[irmtchi[clss]],
                   dec=dec[irmtchi[clss]],
                    unit=(u.deg, u.deg), frame='icrs')  
print(ra[irmtchi[cls]][blu],irgs)
irsugss, irsugssdist, _ = match_coordinates_sky(succ,irgs)
gsirsu = irsugssdist.arcsec<0.1

iclcand = np.delete(inew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
shpclcand = np.delete(shp[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)
shpxxclcand = np.delete(shpxx[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)
shpyyclcand = np.delete(shpyy[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)
gclcand = np.delete(gnew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
rclcand = np.delete(rnew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
nuvclcand = np.delete(iracmag[cls][blu],irsugss[gsirsu],axis=0) 
raclcand = np.delete(ra[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
decclcand = np.delete(dec[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 

m81loc1 = np.where((raclcand<150)&(decclcand<69.43))
m81loc2 = np.where((ra[irmtchi[clss]]<150)&(dec[irmtchi[clss]]<69.43))
print('number of M81 halo GC',len(raclcand[m81loc1])+len(ra[irmtchi[clss]][m81loc2]))
irgs2 = SkyCoord(ra=ra[irmtchi[cls]][blusu],
                    dec=dec[irmtchi[cls]][blusu],
                    unit=(u.deg, u.deg), frame='icrs')  
irsugss2, irsugssdist2, _ = match_coordinates_sky(succ,irgs2)
gsirsu2 = irsugssdist2.arcsec<0.1
iclcand2 = np.delete(inew[irmtchi[cls]][blusu],irsugss[gsirsu2],axis=0) 
shpclcand2 = np.delete(shp[irmtchi[cls]][blusu],irsugss[gsirsu2],axis=0)
gclcand2 = np.delete(gnew[irmtchi[cls]][blusu],irsugss[gsirsu2],axis=0) 
rclcand2 = np.delete(rnew[irmtchi[cls]][blusu],irsugss[gsirsu2],axis=0) 
nuvclcand2 = np.delete(iracmag[cls][blusu],irsugss[gsirsu2],axis=0) 
raclcand2 = np.delete(ra[irmtchi[cls]][blusu],irsugss[gsirsu2],axis=0) 
decclcand2 = np.delete(dec[irmtchi[cls]][blusu],irsugss[gsirsu2],axis=0) 
print(len(ra[irmtchi[cls]][blu]),'Subaru candidates in IRAC')
print(len(iclcand2),len(gclcand2),len(rclcand2),len(shpclcand2),'Subaru candidates with IRAC color')


#xgclcand2-iclcand2, iclcand2-nuvclcand2x
#clsblu = ((i0[irmtchi[clss]]-iracmag[clss]<0.18)&(i0[irmtchi[clss]]-iracmag[clss]>-0.9)
#&(i0[irmtchi[clss]]-iracmag[clss]<(-0.6+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))
#&(i0[irmtchi[clss]]-iracmag[clss]>(-1.7+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))&(shp[irmtchi[clss]]>0.6))

starblu = ((i0[irmtchi[clss]]-iracmag[clss]<(-1.73+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))|(i0[irmtchi[clss]]-iracmag[clss]<-1))
obva = np.where(inew[irmtchi[clss]]-iracmag[clss]>-0.9)
obva = np.where((ra[irmtchi[clss]]>149.51396)&(ra[irmtchi[clss]]<149.53396))
obva = np.where(inew[irmtchi[clss]]<18.5)
obva2 = np.where(inew[irmtchi[clss]]>18.5)
#plt.figure(figsize=(18,9),frameon=False)
fig = plt.figure(figsize=(10,10),frameon=False)
#figure, ax2 = plt.subplots(nr10ws=2, ncols=2)
#figure(1).clear()
#figure(1).set_size_inches(18,9)
#ax2=plt.subplot(241)
ax2=plt.subplot(221)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shp[irmtchi[cls]], 'k.', alpha=0.3,markersize=1.5,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Confirmed GCs')
#ax2.plot(inew[irmtchi[clss]][starblu],shpxx[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5,label='Star-like Confirmed GCs')
ax2.plot(inew[irmtchi[clss]],shp[irmtchi[clss]], 'bx', alpha=1,markersize=8,label='Strong GC candidates')
#ax2.plot(inew[irmtchi[clss]][obva],shp[irmtchi[clss]][obva], 'rx', alpha=1,markersize=10,label='Strong GC candidates')
#ax2.plot(iclcand2, shpclcand2,'g.', alpha=0.5,markersize=3,label='Subaru GC candidates')
#ax2.plot(inew[irmtchi[cls]][blu], shp[irmtchi[cls]][blu],'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand, shpclcand,'g.', alpha=1,markersize=8,label='GC Candidates')
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{average}$',fontsize=14)
ax2.set_xlim(17,27)
ax2.set_ylim(0,2.1)
ax2.legend(loc='lower left', frameon=False)
#plt.legend()
print('size',shp[irmtchi[clss]])
bst = np.where((raclcand>148.87476)&((raclcand<148.87479)))
print('binary star',gclcand[bst],iclcand[bst],rclcand[bst],nuvclcand[bst])
big = np.where(shpclcand>1.25)
ax2=plt.subplot(222)
#Subaru Data black
ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]], 'k.', alpha=0.3,markersize=1.5,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' red
#ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]], 'r.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac and Subaru GCs candidate and maybe Irac Candidates dark green
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
#Blue dots, match within 2 arcsecond with Nantais 2010 in New Subaru
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bx', alpha=1,markersize=10)
ax2.plot(gclcand-iclcand, iclcand,'g.', alpha=1,markersize=8)
#ax2.plot(gclcand[big]-iclcand[big], iclcand[big],'g.', alpha=1,markersize=15)
#ax2.plot(gclcand2-iclcand2, iclcand2,'g.', alpha=0.5,markersize=3)
ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bx', alpha=1,markersize=8)
#ax2.plot(gnew[irmtchi[clss]][obva]-inew[irmtchi[clss]][obva], inew[irmtchi[clss]][obva], 'rx', alpha=1,markersize=10)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}$',fontsize=14)
ax2.set_xlim(-0.5,3.5)
ax2.set_ylim(24,17)
#print(len(gnew[irmtchi[cls]][blu]))


#Color color
#ax2=plt.subplot(243)
#ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], rnew[irmtchi[cls]]-inew[irmtchi[cls]], 'k.', alpha=0.12,markersize=2,lw=0, markeredgecolor='none')#
#ax2.plot(gclcand-rclcand, rclcand-iclcand,'g.', alpha=1,markersize=4)
#ax2.plot(gclcand-rclcand, rclcand-iclcand,'g.', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[clss]]-rnew[irmtchi[clss]], rnew[irmtchi[clss]]-inew[irmtchi[clss]], 'bx', alpha=1,markersize=10)
#ax2.plot(gnew[irmtchi[clss]][obva]-rnew[irmtchi[clss]][obva], rnew[irmtchi[clss]][obva]-inew[irmtchi[clss]][obva], 'rx', alpha=1,markersize=10)
#ax2.legend(loc='upper left', frameon=False)
#ax2.set_xlabel('$(g-r)_{0}$',fontsize=23)
#ax2.set_ylabel('$(r-i)_{0}$',fontsize=23)
#ax2.set_xlim(0,2)
#ax2.set_ylim(-0.25,2)

#g-r diagram
#ax2=plt.subplot(244)
#ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.25,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gclcand2-rclcand2, iclcand2-nuvclcand2,'g.', alpha=0.5,markersize=5,label='Subaru GC candidates')
#ax2.plot(gclcand-rclcand, iclcand-nuvclcand,'g.', alpha=1,markersize=9)
#ax2.plot(gnew[irmtchi[clss]]-rnew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=10)
#ax2.legend(loc='upper left', frameon=False)
#ax2.set_xlabel('$(g-r)_{0}$',fontsize=23)#
#ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=23)
#ax2.set_xlim(-1,3)
#ax2.set_ylim(-2,4)


#print(gnew[irmtchi[clss]][clsblu]-rnew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu])
#ax2=plt.subplot(245)
#ax2.plot(rnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.25,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(rnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
#ax2.plot(rnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(rnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'bx', alpha=1,markersize=12)
#ax2.plot(rclcand-iclcand, iclcand-nuvclcand,'g.', alpha=0.8,markersize=9)
#ax2.plot(rnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=10)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
#ax2.legend(loc='upper left', frameon=False)
#ax2.set_xlabel('$(r-i)_{0}$',fontsize=23)
#ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=23)
#ax2.set_xlim(-1,3)
#ax2.set_ylim(-2,4)
starpp = np.where((raclcand<147.9445362)&(raclcand>147.9245362))
redir = np.where((raclcand<148.47144)&(raclcand>148.45144))
ax2=plt.subplot(223)
ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.3,markersize=1.5,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'bx', alpha=1,markersize=12)

ax2.plot(gclcand-iclcand, iclcand-nuvclcand,'g.', alpha=0.8,markersize=8)
ax2.plot(gclcand2-iclcand2, iclcand2-nuvclcand2,'g.', alpha=0.5,markersize=2,label='Subaru GC candidates')
ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=8)

#ax2.plot(gclcand[starpp]-iclcand[starpp], iclcand[starpp]-nuvclcand[starpp], 'gx', alpha=1,markersize=10) Star

#ax2.plot(gclcand[redir]-iclcand[redir], iclcand[redir]-nuvclcand[redir], 'gx', alpha=1,markersize=10) Not good Gaia color
#ax2.plot(gnew[irmtchi[clss]][obva]-inew[irmtchi[clss]][obva], inew[irmtchi[clss]][obva]-iracmag[clss][obva], 'rx', alpha=1,markersize=10) bright strong GCs
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
#ax2.legend(loc='upper left', frameon=False)

#Size color coded

#sc = ax2.scatter(gclcand-iclcand, iclcand-nuvclcand,
#            c=shpclcand,marker='.',cmap='inferno_r',vmax=2,vmin=0,
#                s=100,edgecolor='none',alpha=1)
#print('error',Vr_error[vrrgss[vrgcc]])
#divider = make_axes_locatable(ax2)
#cax = divider.append_axes("right", "5%")
#cbar = plt.colorbar(sc,cax=cax)
#cbar.ax.tick_params(labelsize=14)

#cbar.set_label('Size',fontsize=20,
#             rotation=270.,ha='center',va='center',
#               labelpad=20)
#cbar.solids.set(alpha=1)


#Selection

#ax2.plot(x, y1, 'g.', alpha=1,markersize=1)
#ax2.plot(x, y2, 'g.', alpha=1,markersize=1)
#ax2.plot(x, y3, 'g.', alpha=1,markersize=1)
#plt.axhline(y=high, color='g', linestyle='-')
#plt.axhline(y=low, color='g', linestyle='-')

ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)
ax2.set_xlim(-0.5,3)
ax2.set_ylim(-2,4)
ax2.legend(loc='lower left', frameon=False)
#add up both candidates to create GCLF
gscandb = np.concatenate((gnew[irmtchi[clss]], gclcand), axis=None)
iscandb = np.concatenate((inew[irmtchi[clss]], iclcand), axis=None)
print(gscandb,len(gscandb))
#candidate for only M81 galaxy
m81space = np.where((ra[irmtchi[clss]]<150.5)&(dec[irmtchi[clss]]<69.5))
m81space2 = np.where((raclcand<150.5)&(decclcand<69.5))
m81exl = np.where((decclcand>69.4332)&(decclcand<69.4532))
#c = np.setdiff1d(a,b)
gscand2 = np.setdiff1d(gclcand[m81space2],gclcand[m81exl]) 
iscand2 = np.setdiff1d(iclcand[m81space2],iclcand[m81exl]) 
gscandbm81 = np.concatenate((gnew[irmtchi[clss]][m81space], gclcand[m81space2]), axis=None)
iscandbm81 = np.concatenate((inew[irmtchi[clss]][m81space], iclcand[m81space2]), axis=None)
gscandbm81e = np.concatenate((gnew[irmtchi[clss]][m81space], gscand2), axis=None)
iscandbm81e = np.concatenate((inew[irmtchi[clss]][m81space], iscand2), axis=None)
print(gscandbm81,len(gscandbm81))
print(len(iscandbm81e))

what = np.where((raclcand<151.557029)&(raclcand>151.554029))
ax2=plt.subplot(224)
ax2.plot(ra[irmtchi[cls]], dec[irmtchi[cls]], 'k.', alpha=0.2,markersize=1.5,lw=0, markeredgecolor='none')
#red dots Spectroscopy confirmed GCs and Ghost Survey 
#ax2.plot(specgccd.ra.deg, specgccd.dec.deg, 'rx', markersize=2)
#blue dots Irac near Spectropcopy confirmed GCs at Subaru blue and Ghost Survey
#ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]], 'bx', alpha=0.5,markersize=3)
#Good Candidtaes in Subaru, Irac
#ax2.plot(ra[irmtchi[cls]][blu], dec[irmtchi[cls]][blu],'g.', alpha=1,markersize=4)
#ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]],'bx', alpha=1,markersize=4)
#ax2.plot(ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu],'yv', alpha=1,markersize=5)
ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]],'bx', alpha=1,markersize=8)
#ax2.plot(ra[irmtchi[clss]][obva], dec[irmtchi[clss]][obva],'rx', alpha=1,markersize=10)
ax2.plot(raclcand, decclcand,'g.', alpha=1,markersize=8)
#ax2.plot(149.4778750  ,  68.8169028,'r.', alpha=1,markersize=10)

#ax2.plot(147.9345362	,69.33661836,'b.', alpha=1,markersize=10)
#ax2.plot(raclcand[what], decclcand[what],'g.', alpha=1,markersize=15)
#plt.axhline(y=69.43, color='g', linestyle='-')
#ax2.legend(loc='upper right', frameon=False)
ax2.text(148.6+0.3, 69.7, 'M82', fontsize=19)
ax2.text(149, 68.94, 'M81', fontsize=18)
ax2.text(151.08-0.15, 68.59, 'NGC 3077', fontsize=18)
ax2.set_xlabel('$RA$',fontsize=14)
ax2.set_ylabel('$Dec$',fontsize=14)
ax2.set_xlim(152.5,147+0.3)
ax2.set_ylim(mdec[0]+0.3,mdec[1]-0.5)
ax22 = ax2.twiny()
ax22.set_xlim(ra2kpc(max(ra[irmtchi[cls]])),ra2kpc(min(ra[irmtchi[cls]])))
ax22.tick_params(axis='both',which='both',direction='in',labelsize=14)
ax22.set_xlabel(r'$R\ {\rm (kpc)}$',fontsize=14)
plt.gcf().set_dpi(140)
plt.tight_layout()

gma = np.where((ra[irmtchi[cls]]<149.4778750+5/3600)&(ra[irmtchi[cls]]>149.4778750-5/3600)&
               (dec[irmtchi[cls]]<68.8169028+5/3600)&(dec[irmtchi[cls]]>68.8169028-5/3600))
print('GFB',ra[irmtchi[cls]][gma],dec[irmtchi[cls]][gma])

gma = np.where((ra<149.4778750+1/3600)&(ra>149.4778750-1/3600)&
               (dec<68.8169028+1/3600)&(dec>68.8169028-1/3600))
print('GFB in subaru',ra[gma],dec[gma],shp[gma]
      ,gi0[gma],ri0[gma],i0[gma])
down = np.where((decclcand<68.6)&(raclcand<150))
print('low GC candidiates',raclcand[down], decclcand[down])

L = ra[irmtchi[clss]][obva]
R = dec[irmtchi[clss]][obva]
print('birght Strong Candidates')
for i in zip(L,R):
  print(i)

L = ra[irmtchi[clss]][obva2]
R = dec[irmtchi[clss]][obva2]
print('faint Strong Candidates')
for i in zip(L,R):
  print(i)

L = raclcand
R = decclcand
print('IRAC Candidates')
for i in zip(L,R):
  print(i)



#plt.legend()
print('number of candidates',len(raclcand))
#print('number of GC-like object',len(iracmag[clss]))
#print('number of star-like object',len(iracmag[clss][starblu]))
#print('GC candidates',raclcand, decclcand)
plt.savefig('IRAC GC final p3.jpg',bbox_inches='tight',transparent=False,dpi=140) #, transparent=False
plt.show()

raclcand_r =  raclcand
decclcand_r = decclcand


lowgc = np.where(decclcand<68.6)
plt.figure(figsize=(18,6),frameon=False)
ax2=plt.subplot(131)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shpxx[irmtchi[cls]], 'k.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Confirmed GCs')
#ax2.plot(inew[irmtchi[clss]][starblu],shpxx[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5,label='Star-like Confirmed GCs')
ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=5,label='Strong GC candidates')
#ax2.plot(inew[irmtchi[cls]][blu], shp[irmtchi[cls]][blu],'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand, shpxxclcand,'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand[lowgc], shpxxclcand[lowgc],'gv', alpha=1,markersize=8)
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{xx}$',fontsize=14)
ax2.set_xlim(17,27)
ax2.set_ylim(0,2)
plt.legend()

ax2=plt.subplot(132)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shpyy[irmtchi[cls]], 'k.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Confirmed GCs')
#ax2.plot(inew[irmtchi[clss]][starblu],shpxx[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5,label='Star-like Confirmed GCs')
ax2.plot(inew[irmtchi[clss]],shpyy[irmtchi[clss]], 'bx', alpha=1,markersize=5,label='Strong GC candidates')
#ax2.plot(inew[irmtchi[cls]][blu], shp[irmtchi[cls]][blu],'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand, shpyyclcand,'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand[lowgc], shpyyclcand[lowgc],'gv', alpha=1,markersize=8)
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{yy}$',fontsize=14)
ax2.set_xlim(17,27)
ax2.set_ylim(0,2)
plt.legend()
print('shpyy IRAC ',shpyyclcand)

ax2=plt.subplot(133)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shp[irmtchi[cls]], 'k.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Confirmed GCs')
#ax2.plot(inew[irmtchi[clss]][starblu],shpxx[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5,label='Star-like Confirmed GCs')
ax2.plot(inew[irmtchi[clss]],shp[irmtchi[clss]], 'bx', alpha=1,markersize=5,label='Strong GC candidates')
#ax2.plot(inew[irmtchi[cls]][blu], shp[irmtchi[cls]][blu],'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand, shpclcand,'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(iclcand[lowgc], shpclcand[lowgc],'gv', alpha=1,markersize=8)
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{avg}$',fontsize=14)
ax2.set_xlim(17,27)
ax2.set_ylim(0,2)
plt.legend()
plt.tight_layout()
print('shp IRAC ',shpclcand)
#print('GC candidates color of i - [3.6]',iclcand-nuvclcand)

#print('ra,dec',raclcand, decclcand,max(decclcand))
#print('g,r,i',gclcand,rclcand,iclcand)
print('color bright strong GC',inew[irmtchi[clss]][obva]-iracmag[clss][obva],inew[irmtchi[clss]][obva],iracmag[clss][obva])
print('color strong GC',inew[irmtchi[clss]]-iracmag[clss],inew[irmtchi[clss]],iracmag[clss])
print('color faint strong GC',inew[irmtchi[clss]][obva2]-iracmag[clss][obva2],inew[irmtchi[clss]][obva2],iracmag[clss][obva2])

"""### Check projected radius second time"""

iracgc = SkyCoord(ra=raclcand,
                   dec=decclcand,
                    unit=(u.deg, u.deg), frame='icrs')  

strgc = SkyCoord(ra=ra[irmtchi[clss]],
                   dec=dec[irmtchi[clss]],
                    unit=(u.deg, u.deg), frame='icrs')
m81 = SkyCoord(ra=m81_ra,
                   dec=m81_dec,
                    unit=(u.deg, u.deg), frame='icrs')
sepir = iracgc.separation(m81)
print(sepir.deg*np.pi/180. * dm81)
sepst = strgc.separation(m81)
print(sepst.deg*np.pi/180. * dm81)

"""# IKN IRAC
Don't run after IRAC
"""

iknknowngc = SkyCoord(["10h08m07.12s +68d23m36.06s","10h08m10.80s +68d24m04.95s","10h08m05.27s +68d24m33.16s","10h08m04.80s +68d24m53.07s","10h08m05.52s +68d24m57.35s"], frame="icrs")
#strogccd3 = SkyCoord(ra = np.hstack([ra[irmtchi[clssg]],iknknowngc.ra.deg]), 
#                     dec = np.hstack([dec[irmtchi[clssg]],iknknowngc.dec.deg]),
#                    unit=(u.deg, u.deg), frame='icrs')

irac = ascii.read('/gdrive/My Drive/Astro Research/IRAC/irac_ikn.csv')
iraccd = SkyCoord(ra=irac['ra'][irac['i1_f_ap1']  != 'null'],
                      dec=irac['dec'][irac['i1_f_ap1']  != 'null'],
                      unit=(u.deg, u.deg), frame='icrs')

irmtchi, irmtchdist, _ = match_coordinates_sky(iraccd,scoords)
#3.6um
#print(irac['i1_f_ap1'])
iracap1 = irac['i1_f_ap1'][irac['i1_f_ap1']  != 'null']
iracap1 = np.asarray(iracap1, dtype='float64')
#iracap1 = float(irac['i1_f_ap1'])
iracmag = -2.5*np.log10(iracap1*1e-6/3631.) 
#iracmag = -2.5*np.log10(irac['i1_f_ap1']*1e-6/3631.)
# AB mag
cls = irmtchdist.arcsec<0.75

hgcir, hgcirdist, _ = match_coordinates_sky(iraccd,iknknowngc) # Add IKN GCs originally gootgc
clss = hgcirdist.arcsec< 0.5

#cds
gd, = np.where( (gi0 > -1) & (gi0 < 3.5) &
                (ri0 > -1) & (ri0 < 2.5) )
cmd,cmdy,cmdx = np.histogram2d(i0[gd],gi0[gd],bins=(250,125),normed=False)
cmds = img_scale.log(cmd,scale_min=1,scale_max=1.e6)

cd,cdy,cdx = np.histogram2d(dec,ra,bins=(180,120),normed=False)
cds = img_scale.log(cd,scale_min=1,scale_max=1.e6)

sm=0.6;bi=2
#a = shpxx[irmtchi[cls]]/2
#b = shpyy[irmtchi[cls]]/2
#e = abs((a-b)/a)
cgccstu, = np.where( (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55) 
                &((gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))<0)
                 & (shp[irmtchi[cls]] < bi) &(shp[irmtchi[cls]] > sm) #&
                #  (shpxx[irmtchi[cls]] < bi) &(shpxx[irmtchi[cls]] > sm) &
               #   (shpyy[irmtchi[cls]] < bi) &(shpyy[irmtchi[cls]] > sm) 
               & (gi0[irmtchi[cls]] > 0.25 ) &(gi0[irmtchi[cls]]<1.25) 
                & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 23)&(dec[irmtchi[cls]]<68.55)&(ra[irmtchi[cls]]>151.5))#&(ra[irmtchi[cls]]>151.5)&(ra[irmtchi[cls]]<152.7)
             #   &(dec[irmtchi[cls]]<68.3)&(dec[irmtchi[cls]]>68.6)) 
 #               152.5,151.7)
 #ax2.set_xlim(152.5,151.7)
#ax2.set_ylim(68.3,68.6)
#ax2.set_ylim(68.3,68.6
#posscand, = np.where(  (i0[irmtchi[cls]] > 18) & (i0[irmtchi[cls]] < 23 )) 
high =  -0.5#-0.73
low = -1.2
blu = ((i0[irmtchi[cls]]-iracmag[cls]<high)&
       (i0[irmtchi[cls]]-iracmag[cls]>low)
#&(i0[irmtchi[cls]]-iracmag[cls]<(-0.23-0.55*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-0.3-0.55 0.23.  0.7-1.5
&(i0[irmtchi[cls]]-iracmag[cls]>(-2.12+1.18*(g0[irmtchi[cls]]-i0[irmtchi[cls]])))#-2.0867
&(i0[irmtchi[cls]]-iracmag[cls]<(-2.1375+1.75*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-2.1375+1.75
& (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55) &((gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]])<0))& (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) &#&  
   #               (shpxx[irmtchi[cls]] < bigg) &(shpxx[irmtchi[cls]] > smaa) &
   #               (shpyy[irmtchi[cls]] < bigg) &(shpyy[irmtchi[cls]] > smaa)
                  (gi0[irmtchi[cls]] > 0.25) & (gi0[irmtchi[cls]] < 1.25) 
                 & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 21 )&(ra[irmtchi[cls]]>151.7)&(dec[irmtchi[cls]]<68.55))

smaa = 0.6 ; bigg =  2
high =  -0.55#-0.73
low = -1.2
blu = ((i0[irmtchi[cls]]-iracmag[cls]<high)&
       (i0[irmtchi[cls]]-iracmag[cls]>low)
#&(i0[irmtchi[cls]]-iracmag[cls]<(-0.23-0.55*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-0.3-0.55 0.23.  0.7-1.5
&(i0[irmtchi[cls]]-iracmag[cls]>(-2.22+1.18*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-2.0867 -2.13+1.18.  -2.22+1.18 Now inlcude the ikn GC
&(i0[irmtchi[cls]]-iracmag[cls]<(-2.24+2.4*(g0[irmtchi[cls]]-i0[irmtchi[cls]]))) #-2.1375+1.75 IKN -2.24+2.4
#& (abs(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]]))< 0.55) &(gr0[irmtchi[cls]] - locus_spline(ri0[irmtchi[cls]])<0)
                 & 
       (shp[irmtchi[cls]] < bigg) &(shp[irmtchi[cls]] > smaa) #&  
   #               (shpxx[irmtchi[cls]] < bigg) &(shpxx[irmtchi[cls]] > smaa) &
   #               (shpyy[irmtchi[cls]] < bigg) &(shpyy[irmtchi[cls]] > smaa)
                 & (gi0[irmtchi[cls]] > 0.25) & (gi0[irmtchi[cls]] < 1.25) 
                 & (i0[irmtchi[cls]] > 17.5) & (i0[irmtchi[cls]] < 21 )&(ra[irmtchi[cls]]>151.7)&(dec[irmtchi[cls]]<68.55))


#testclublu = ((i0[irmtchi[clss]]-iracmag[clss]<0.18)&(i0[irmtchi[clss]]-iracmag[clss]>-0.9)
#&(i0[irmtchi[clss]]-iracmag[clss]<(-0.6+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))
#&(i0[irmtchi[clss]]-iracmag[clss]>(-1.7+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))&(shp[irmtchi[clss]] < 0.6)) #(shpxx[irmtchi[clss]] < 0.5)

#starblu = ((i0[irmtchi[clss]]-iracmag[clss]<(-1.69+1.35*(g0[irmtchi[clss]]-r0[irmtchi[clss]])))|(i0[irmtchi[clss]]-iracmag[clss]<-0.89))

#missblu = ((shpxx[irmtchi[clss]] >0.75)&(shpxx[irmtchi[clss]]< 0.89)&(i0[irmtchi[clss]]>20)&(i0[irmtchi[clss]]<21)
#&(gi0[irmtchi[clss]] >0.5)&(gi0[irmtchi[clss]] <1))
#gaxblu = (((i0[irmtchi[clss]]-iracmag[clss])>0.1))
#|(i0[irmtchi[clss]]-iracmag[clss]>(-1.2+1.35*(g0[irmtchi[clss]]-i0[irmtchi[clss]])))
plt.figure(figsize=(18*1.5,9*1.5),frameon=False)
#figure(1).clear()
#figure(1).set_size_inches(18,9)
ax2=plt.subplot(241)
#Irac near Subaru <0.75'' black
ax2.plot(inew[irmtchi[cls]], shp[irmtchi[cls]], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' and Subaru GCs candidates light green
#ax2.plot(inew[irmtchi[cls]][posscand], shpxx[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2,label='GC Candidates')

ax2.plot(inew[irmtchi[cls]][cgccstu], shpxx[irmtchi[cls]][cgccstu], 'gv', alpha=1,markersize=6)
ax2.plot(inew[irmtchi[cls]][blu], shpxx[irmtchi[cls]][blu], 'rv', alpha=1,markersize=6)
ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bo', alpha=1,markersize=4,label='IKN GCs ')
#ax2.plot(inew[irmtchi[clss]],shpxx[irmtchi[clss]], 'bx', alpha=1,markersize=4,label='Galaxy-like L18 GCs')
#ax2.plot(inew[irmtchi[clss]][starblu],shp[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5,label='Star-like L18 GCs')
#ax2.plot(inew[irmtchi[clss]][clsblu],shp[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5,label='Cluster-like L18 GCs')
#ax2.plot(inew[irmtchi[clss]][gaxblu],shp[irmtchi[clss]][gaxblu], 'bo', alpha=1,markersize=4,label='Galaxy-like L18 GCs')
#ax2.plot(inew[irmtchi[clss]][testclublu], shp[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=5,label='Contaminant')
#ax2.plot(inew[irmtchi[cls]][blu], shpxx[irmtchi[cls]][blu],'g.', alpha=1,markersize=3)
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{average}$',fontsize=14)
ax2.set_xlim(17,27)
ax2.set_ylim(0,2)
ax2.legend(loc='lower left', frameon=False)

ax2=plt.subplot(242)
#Subaru Data black
ax2.plot(gnew-inew, inew, 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' red
#ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]], 'r.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac and Subaru GCs candidate and maybe Irac Candidates dark green
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
#Blue dots, match within 2 arcsecond with Nantais 2010 in New Subaru

ax2.plot(gnew[irmtchi[cls]][cgccstu]-inew[irmtchi[cls]][cgccstu], inew[irmtchi[cls]][cgccstu], 'gv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu], 'rv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bo', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][missblu]-inew[irmtchi[clss]][missblu], inew[irmtchi[clss]][missblu], 'g.', alpha=1,markersize=7)
#ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu], 'gv', alpha=1,markersize=6)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu],'g.', alpha=1,markersize=3) missblu
ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}$',fontsize=14)
ax2.set_xlim(-1,3.5)
ax2.set_ylim(27,17)
#print(len(gnew[irmtchi[cls]][blu]))
ax2=plt.subplot(245)
ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], rnew[irmtchi[cls]]-inew[irmtchi[cls]], 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
ax2.plot(gnew[irmtchi[cls]][cgccstu]-rnew[irmtchi[cls]][cgccstu], rnew[irmtchi[cls]][cgccstu]-inew[irmtchi[cls]][cgccstu], 'gv', alpha=1,markersize=6,label='GC candidates')
ax2.plot(gnew[irmtchi[cls]][blu]-rnew[irmtchi[cls]][blu], rnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], 'rv', alpha=1,markersize=6,label='GC candidates')
ax2.plot(gnew[irmtchi[clss]]-rnew[irmtchi[clss]], rnew[irmtchi[clss]]-inew[irmtchi[clss]], 'bo', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][starblu]-rnew[irmtchi[clss]][starblu], rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu]-rnew[irmtchi[clss]][clsblu], rnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], 'rx', alpha=1,markersize=5)
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-r)_{0}$',fontsize=14)
ax2.set_ylabel('$(r-i)_{0}$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-0.5,3)

ax2=plt.subplot(246)
ax2.plot(gnew[irmtchi[cls]]-rnew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-rnew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(gnew[irmtchi[clss]][starblu]-rnew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu]-rnew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][testclublu]-rnew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=6)
#ax2.plot(gnew[irmtchi[cls]][blu]-rnew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=1,markersize=2)
#ax2.plot(gnew[irmtchi[cls&starsmall[irmtchi]]]-rnew[irmtchi[cls&starsmall[irmtchi]]], inew[irmtchi[cls&starsmall[irmtchi]]]-iracmag[cls&starsmall[irmtchi]], 'r.', alpha=0.1,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gnew[irmtchi[cls]][cgccstu]-rnew[irmtchi[cls]][cgccstu], inew[irmtchi[cls]][cgccstu]-iracmag[cls][cgccstu], 'gv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[cls]][blu]-rnew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu], 'rv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[clss]]-rnew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bo', alpha=1,markersize=4)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-r)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,6)

ax2=plt.subplot(243)
ax2.plot(rnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(rnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(rnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
#ax2.plot(rnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(rnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(rnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
#ax2.plot(rnew[irmtchi[clss]][testclublu]-inew[irmtchi[clss]][testclublu], inew[irmtchi[clss]][testclublu]-iracmag[clss][testclublu], 'gv', alpha=1,markersize=6)
ax2.plot(rnew[irmtchi[cls]][cgccstu]-inew[irmtchi[cls]][cgccstu], inew[irmtchi[cls]][cgccstu]-iracmag[cls][cgccstu], 'gv', alpha=1,markersize=6)
ax2.plot(rnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu], 'rv', alpha=1,markersize=6)
ax2.plot(rnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bo', alpha=1,markersize=4)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(r-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,6)
ax2=plt.subplot(247)
ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]]-iracmag[cls], 'k.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.5,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand]-iracmag[cls][posscand],'g.', alpha=0.2,markersize=2)
#ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu],'g.', alpha=0.8,markersize=2)
#ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu]-iracmag[clss][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu]-iracmag[clss][clsblu], 'rx', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][missblu]-inew[irmtchi[clss]][missblu], inew[irmtchi[clss]][missblu]-iracmag[clss][missblu], 'g.', alpha=1,markersize=8)
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bx', alpha=1,markersize=4)
ax2.plot(gnew[irmtchi[cls]][cgccstu]-inew[irmtchi[cls]][cgccstu], inew[irmtchi[cls]][cgccstu]-iracmag[cls][cgccstu], 'gv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[cls]][blu]-inew[irmtchi[cls]][blu], inew[irmtchi[cls]][blu]-iracmag[cls][blu], 'rv', alpha=1,markersize=6)
ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]]-iracmag[clss], 'bo', alpha=1,markersize=4)
#    ax2.plot([-1,1],[-3.05,-0.35],'b-')
ax2.legend(loc='upper left', frameon=False)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}-[3.6]$',fontsize=14)
ax2.set_xlim(-1,3)
ax2.set_ylim(-3,6)

ax2=plt.subplot(244)
ax2.plot(ra[irmtchi[cls]], dec[irmtchi[cls]], 'k.', alpha=0.4,markersize=3,lw=0, markeredgecolor='none')
#red dots Spectroscopy confirmed GCs and Ghost Survey 
#ax2.plot(specgccd.ra.deg, specgccd.dec.deg, 'rx', markersize=2)
#blue dots Irac near Spectropcopy confirmed GCs at Subaru blue and Ghost Survey
#ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]], 'bx', alpha=0.5,markersize=3)
#Good Candidtaes in Subaru, Irac
#ax2.plot(ra[irmtchi[cls]][blu], dec[irmtchi[cls]][blu],'g.', alpha=1,markersize=6) #testclublu
#ax2.scatter(raclcand,decclcand,c='red',s=12,alpha=0.8)
ax2.plot(ra[irmtchi[cls]][cgccstu], dec[irmtchi[cls]][cgccstu],'gv', alpha=1,markersize=4)
ax2.plot(ra[irmtchi[cls]][blu], dec[irmtchi[cls]][blu],'rv', alpha=1,markersize=4)
ax2.plot(ra[irmtchi[clss]], dec[irmtchi[clss]],'bo', alpha=1,markersize=4)
ax2.imshow(cds,interpolation='nearest',
          extent=[min(ra),max(ra),max(dec),min(dec)],
            aspect='auto', cmap='Greys',alpha=0.5)
#ax2.plot(ra[irmtchi[clss]][starblu], dec[irmtchi[clss]][starblu],'yv', alpha=1,markersize=5)
#ax2.plot(ra[irmtchi[clss]][clsblu], dec[irmtchi[clss]][clsblu],'rx', alpha=1,markersize=5)
#ax2.plot(ra[irmtchi[cls]][cgccstu], dec[irmtchi[cls]][cgccstu],'gv', alpha=1,markersize=4)
ax2.legend(loc='upper right', frameon=False)
ax2.set_xlabel('$RA$',fontsize=14)
ax2.set_ylabel('$Dec$',fontsize=14)
ax2.set_xlim(152.5,151.7)
ax2.set_ylim(68.3,68.6)
#ax2.set_ylim(mdec[0]+0.3,mdec[1]-0.5)
plt.tight_layout()
plt.legend()

print('TWO IKN Confirmed GCs that have IRAC coverage',ra[irmtchi[clss]], dec[irmtchi[clss]])

irgs = SkyCoord(ra=ra[irmtchi[cls]][blu],
                    dec=dec[irmtchi[cls]][blu],
                    unit=(u.deg, u.deg), frame='icrs')  
succ = SkyCoord(ra=ra[irmtchi[clss]],
                    dec=dec[irmtchi[clss]],
                    unit=(u.deg, u.deg), frame='icrs')  
irsugss, irsugssdist, _ = match_coordinates_sky(succ,irgs)
gsirsu = irsugssdist.arcsec<0.1
print(len(irsugss[gsirsu]))
gclcand_ikn = np.delete(gnew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
raclcand_ikn = np.delete(ra[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
decclcand_ikn = np.delete(dec[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)

import pandas as pd
df =pd.DataFrame()
iknknowngcall = SkyCoord(["10h08m07.12s +68d23m36.06s","10h08m10.80s +68d24m04.95s","10h08m05.27s +68d24m33.16s"
,"10h08m04.80s +68d24m53.07s","10h08m05.52s +68d24m57.35s","10h08m05.16s +68d25m29.13s","10h08m08.85s +68d28m36.72s"], frame="icrs")
df['ra_ikn_candidates'] = raclcand_ikn
df['dec_ikn_candidates'] =decclcand_ikn
#df3 =pd.DataFrame()
#print(i0[irmtchi[clss]],g0[irmtchi[clss]],r0[irmtchi[clss]],ra[irmtchi[clss]])
#df3['ra_IRAC_r'] = raclcand_r
#df3['dec_IRAC_r'] =decclcand_r
#df['g_IRAC_r'] =gclcand_r
df2 =pd.DataFrame()
df2['ra_IKN'] = iknknowngcall.ra.deg
df2['dec_IKN'] =iknknowngcall.dec.deg
print(df)
print(df2)
df.to_csv('IKN GC candidates.csv',index= None)
df2.to_csv('IKN confirmed GCs.csv',index= None)

"""# Luminosity funciton of M81 outer halo clusters"""

#Get rid of bad looking IRAC GCs (147.9345362	,69.33661836), (150.4569158118079, 69.071530931118),
bstgc = SkyCoord([ (148.523663	,69.03109623),(148.6356212,	69.40445446)
,(148.8386781	,68.62236334),(150.4569158118079, 69.071530931118),(151.5560287773686, 68.68292859884913),
(148.52366,69.03110),(148.63562 ,69.40445)] ,frame='icrs', unit='deg') 

#(148.87477581, 68.7636631),(151.5560287773686, 68.68292859884913),(150.4569158118079, 69.071530931118)
#,(148.63562116528604, 69.4044544635856),(148.52366298734165, 69.0310962339944)
#delete overlaping candidates 
irgs = SkyCoord(ra=ra[irmtchi[cls]][blu], #148.87477581, 68.7636631
                    dec=dec[irmtchi[cls]][blu],
                    unit=(u.deg, u.deg), frame='icrs')  
succ = SkyCoord(ra=np.hstack([ra[irmtchi[clss]],bstgc.ra.deg]),
                   dec=np.hstack([dec[irmtchi[clss]],bstgc.dec.deg]),
                    unit=(u.deg, u.deg), frame='icrs')  
print(irgs)
irsugss, irsugssdist, _ = match_coordinates_sky(succ,irgs)

gsirsu = irsugssdist.arcsec<0.1
#print(len(irsugss[gsirsu]))
iclcand = np.delete(inew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
shpclcand = np.delete(shp[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)
shpxxclcand = np.delete(shpxx[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)
shpyyclcand = np.delete(shpyy[irmtchi[cls]][blu],irsugss[gsirsu],axis=0)
gclcand = np.delete(gnew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
rclcand = np.delete(rnew[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
nuvclcand = np.delete(iracmag[cls][blu],irsugss[gsirsu],axis=0) 
raclcand = np.delete(ra[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 
decclcand = np.delete(dec[irmtchi[cls]][blu],irsugss[gsirsu],axis=0) 

projM81 = np.sqrt(((raclcand-m81_ra)*np.cos(np.pi/180.*m81_dec))**2+(decclcand-m81_dec)**2)*np.pi/180. * dm81
#print('Rp in Kpc',proj2)
#print(raclcand,decclcand)

from scipy.stats import norm
from scipy.stats import alpha
from scipy.stats import beta
import scipy.stats
import scipy.stats as stats
m81rv = np.where((ra[irmtchi[clss]]<150)&(dec[irmtchi[clss]]<69.43))
m81rv2 = np.where((raclcand<150)&(decclcand<69.43))
m81rv22 = np.where((ra[irmtchi[cls]][blu]<150)&(dec[irmtchi[cls]][blu]<69.43))
gscandb = np.concatenate((g0[irmtchi[clss]][m81rv],gclcand[m81rv2]), axis=0)
iscandb = np.concatenate((i0[irmtchi[clss]][m81rv],iclcand[m81rv2]), axis=0)
rascandb = np.concatenate((ra[irmtchi[clss]][m81rv],decclcand[m81rv2]), axis=0)
decscandb = np.concatenate((ra[irmtchi[clss]][m81rv],decclcand[m81rv2]), axis=0)

fneww = fits.open('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/Nantais11GC.fit')
specgcc = fneww[1].data
goodGCNan = np.where((specgcc['Qmod']=='good')|(specgcc['Qmod']=='conf'))
Vband = gscandb + 0.067 - 0.439*(gscandb-iscandb) # This is M81 group
print('number of M81 GC in LF',len(Vband))
fig = plt.figure(figsize=(15,15),frameon=False)
ax = plt.subplot(2,2,1)
mu, sigma = norm.fit(Vband-27.79)
#print(sigma)
#print(Vband) #15
print(Vband)
_, bins, _ = plt.hist(Vband-27.79,9,density = True, alpha=0.7,label='M81 outer GCs',color='blue') 
#_, bins, _ = plt.hist(mvMW,30,density = True, alpha=0.8,label='MW Harris 96',color='purple') 
#print(Vband)
print('M81 mean of V',np.mean(Vband-27.79),'M81 median of V',np.median(Vband-27.79),'error',np.std(Vband-27.79)/np.sqrt(len(Vband-27.79)),'std',sigma,'sigma',np.std(Vband-27.79))
#plt.hist(Vbandngc-27.67,5,density = True, alpha=0.4,label='NGC 3077 GCs candidates',color='green') 
plt.hist(specgcc['Vmag'][goodGCNan]-27.79,100,density = True, alpha=0.5,label='NH10 GCs',color='red')
best_fit_line = norm.pdf(bins, mu, sigma) 
print('M81 peak',mu)
#print(mu)
#print(mu)
plt.plot(bins, best_fit_line,color='blue')
muMW = -7.65 #MW
muM31 = -7.4 #MW
variance = 1
#ax.set_xlim(-11.5,-3)
sigmaMW = 1.15
sigmaM31 = 1.2
x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)
plt.plot(x, stats.norm.pdf(x, muMW, sigmaMW),label='expected GCLF (M31)',color='k')
plt.plot(x, stats.norm.pdf(x, muM31, sigmaM31),label='expected GCLF (MW)',color='g')
plt.title('Frequency Histogram',fontsize=20)
ax.set_xlabel(r'$V_0$',fontsize=20)
ax.set_ylabel('Frequency',fontsize=20)
ax.legend(loc='upper left', frameon=True)
ax.invert_xaxis()
ax.set_ylim(0,1.2)
meanV = np.mean(Vband-27.79)
stdV = np.std(Vband-27.79)
stat2, pvalue2 = stats.kstest(Vband-27.79, 'norm', args=(meanV,stdV))
plt.savefig('GCLF finf M81.jpg',bbox_inches='tight',transparent=False,dpi=400)
plt.show()

print('V band statistic M81 GCs',stat2,'pvalue',pvalue2)



#Inlucde all clsuter
gscandb = np.concatenate((g0[irmtchi[clss]],gclcand), axis=None)
iscandb = np.concatenate((i0[irmtchi[clss]],iclcand), axis=None)
fneww = fits.open('/gdrive/My Drive/Astro Research/M81 Comfirmed GCs/Nantais11GC.fit')
specgcc = fneww[1].data
goodGCNan = np.where((specgcc['Qmod']=='good')|(specgcc['Qmod']=='conf'))
Vband = gscandb + 0.067 - 0.439*(gscandb-iscandb) # This is M81 group
print(len(Vband))
fig = plt.figure(figsize=(15,15),frameon=False)
ax = plt.subplot(2,2,1)
mu, sigma = norm.fit(Vband-27.79)
print(sigma)

_, bins, _ = plt.hist(Vband-27.79,15,density = True, alpha=0.7,label='M81 group GCs candidates',color='blue') 
print('mean of V',np.mean(Vband-27.79),'error',sigma/np.sqrt(len(Vband-27.79)))
#plt.hist(Vbandngc-27.67,5,density = True, alpha=0.4,label='NGC 3077 GCs candidates',color='green') 
plt.hist(specgcc['Vmag'][goodGCNan]-27.79,100,density = True, alpha=0.5,label='M81 Nantais GCs good and conf',color='red')
best_fit_line = norm.pdf(bins, mu, sigma) 
print('M81 peak',mu)
#print(mu)
#print(mu)
plt.plot(bins, best_fit_line,label='M81 group GCs candidates fits',color='blue')
mu = -7.65 #M31
muu = -7.4 #MW
variance = 1
sigma = math.sqrt(variance)
xs = np.linspace(1, 21, 200)
x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)
plt.vlines(x=-7.65, ymin=0, ymax=len(xs), colors='black', ls=':', lw=2, label='M31')
plt.vlines(x=-7.4, ymin=0, ymax=len(xs), colors='green', ls='-', lw=2, label='MW')
#plt.plot(x, stats.norm.pdf(x, muu, sigma),label='expected fits (MW)',color='g')
plt.gca().set(title='Frequency Histogram', ylabel='Frequency')
ax.set_xlabel(r'$V_0$',fontsize=15)
ax.legend(loc='upper left', frameon=False)
ax.invert_xaxis()
ax.set_ylim(0,1.2)
meanV = np.mean(Vband-27.79)
stdV = np.std(Vband-27.79)
stat2, pvalue2 = stats.kstest(Vband-27.79, 'norm', args=(meanV,stdV))
plt.savefig('GCLF finf.jpg',bbox_inches='tight',transparent=False,dpi=400)
plt.show()

print('V band statistic',stat2,'pvalue',pvalue2)

#separation astropy angular 2d

"""#Gaia helps for IRAC"""

iracsgc = SkyCoord(ra=raclcand,
                    dec=decclcand,
                    unit=(u.deg, u.deg), frame='icrs')
#print('irac candidates',iracsgc)
fga = fits.open('/gdrive/My Drive/Astro Research/GAIA/M81GaiaDR3.fits.gz')
gaia = fga[1].data
gaiacd = SkyCoord(ra=gaia['ra'][:],
                      dec=gaia['dec'][:],
                      unit=(u.deg, u.deg), frame='icrs')
fga.close()
#p.ra,p.dec,p.u,p.g,p.r,p.i
#Match with Subaru scoords
gasuba, gasubast, _ = match_coordinates_sky(gaiacd,scoords) #iracsgc
gasd = gasubast.arcsec<0.3

#gaican = SkyCoord(ra=cra,
#                    dec=cdec,
#                    unit=(u.deg, u.deg), frame='icrs') 
gairba, gairbast, _ = match_coordinates_sky(gaiacd[gasd],iracsgc)
gasdd = gairbast.arcsec<0.5
#print(gaiacd[gasdd])
print('overlapped IRAC GC',iracsgc[gairba[gasdd]])
iracoverga = SkyCoord([(iracsgc[gairba[gasdd]])], frame='icrs', unit=(u.deg, u.deg)) 

pmga =gaia['pm']
pmragaer =gaia['pmra_error']
pmdecgaer =gaia['pmdec_error']
pmerr = np.sqrt(pmdecgaer**2+pmragaer**2)
pagaer = gaia['parallax_error']
paga = gaia['parallax']
gra = gaia['ra'][:]
gdec = gaia['dec'][:]

pp = np.where(paga[gasd][gasdd]>0)
pp2 = np.where(paga[gasd][gasdd]<0)
print('two IRAC cand',gra[gasd][gasdd][pp2],gdec[gasd][gasdd][pp2],gra[gasd][gasdd][pp],gdec[gasd][gasdd][pp])
#print(iracoverga.ra.deg,iracoverga.dec.deg)
# = SkyCoord(ra=np.hstack([specgc['RAJ2000'],knowngc.ra.deg[2:4]]),
#                    dec=np.hstack([specgc['DEJ2000'],knowngc.dec.deg[2:4]]),
#                    unit=(u.deg, u.deg), frame='icrs')  
print('# of overlap', len(gaiacd[gasd][gasdd])) #one object has no Gaia band measured.
gga = gaia['phot_g_mean_mag']
bpga = gaia['phot_bp_mean_mag']
rpga = gaia['phot_rp_mean_mag']
brega = gaia['phot_bp_rp_excess_factor']
aenga = gaia['astrometric_excess_noise']


#rvga = gaia['radial_velocity']
cmra= 148.8883333 
cmdec=  69.0652778
print('Gaia G, bp, rp IRAC GCs,',gga[gasd][gasdd],rpga[gasd][gasdd],bpga[gasd][gasdd])
fnew = fits.open('/gdrive/My Drive/Astro Research/Nantais10_GC.fit')
specgc = fnew[1].data
fnew.close()
gacir, gacirdist, _ = match_coordinates_sky(gaiacd[gasd],   strogccd)#iknknowngc)# strogccd2)#gootgc)
clsga = gacirdist.arcsec< 0.5
print('strong gc',len(gacir[clsga]))
#CC of gaia

redir = np.where(bpga[gasd][gasdd]-gga[gasd][gasdd]>0)
plt.figure(figsize=(18,19*1.5),frameon=False)
ax2=plt.subplot(421)
ax2.set_ylim(-0.5,4)
ax2.set_xlim(-2.5,2)
plt.plot(bpga-gga, gga-rpga, 'k.', alpha=0.05,markersize=1)
#plt.plot(bpga[gasd&gaclpec]-gga[gasd&gaclpec], gga[gasd&gaclpec]-rpga[gasd&gaclpec], 'bx', alpha=1,markersize=6 ,label='Confirmed GCs')
#plt.plot(bpga[clcc]-gga[clcc], gga[clcc]-rpga[clcc], 'rx', alpha=1,markersize=3 ,label='GCs subaru')
#plt.plot(bpga[gasd][gacl]-gga[gasd][gacl], gga[gasd][gacl]-rpga[gasd][gacl], 'g.', alpha=1,markersize=2,label='GC candidates')
#plt.plot(bplcand-glcand,glcand-rplcand, 'g.', alpha=1,markersize=4,label='GC candidates')
#plt.plot(bpga[gasd&gaclpec][badgagc]-gga[gasd&gaclpec][badgagc], gga[gasd&gaclpec][badgagc]-rpga[gasd&gaclpec][badgagc], 'bx', alpha=1,markersize=10 ,label='Strong GC candidates')
plt.plot(bpga[gasd][gasdd]-gga[gasd][gasdd],gga[gasd][gasdd]-rpga[gasd][gasdd], 'g.', alpha=1,markersize=8,label='Identified IRAC GC candidates in Gaia EDR3')
plt.plot(bpga[gasd][gasdd][pp2]-gga[gasd][gasdd][pp2],gga[gasd][gasdd][pp2]-rpga[gasd][gasdd][pp2], 'g.', alpha=1,markersize=14)
plt.plot(bpga[gasd][gasdd][redir]-gga[gasd][gasdd][redir],gga[gasd][gasdd][redir]-rpga[gasd][gasdd][redir], 'r.', alpha=1,markersize=14)
plt.plot(bpga[gasd][clsga]-gga[gasd][clsga], gga[gasd][clsga]-rpga[gasd][clsga], 'bx', alpha=1,markersize=10 ,label='Strong GC candidates')#
#plt.plot(bpga[gasd][gacl][cmdgc]-gga[gasd][gacl][cmdgc], gga[gasd][gacl][cmdgc]-rpga[gasd][gacl][cmdgc], 'r.', alpha=1,markersize=2,label='contaminants')
#plt.plot(bpga[gaclpec][ghogaia]-gga[gaclpec][ghogaia], gga[gaclpec][ghogaia]-rpga[gaclpec][ghogaia], 'rv', alpha=1,markersize=4 ,label='GHOST GCs ')
#ax2.add_patch(PathPatch(pgcga,facecolor='none',edgecolor='orange',lw=1.5))
#plt.plot(bpga-gga, b, 'k.', markersize=0.1,label='color edge')
#ax2.add_patch(PathPatch(pgcga ,facecolor='none',edgecolor='red',lw=1.5))
ax2.set_xlabel('$BP-G$ [mag]',fontsize=20)
ax2.set_ylabel('$G-RP$ [mag]',fontsize=20)
ax2.legend(loc='lower left', frameon=False)

ax2=plt.subplot(422)
ax2.set_xlim(-1,3.5)
ax2.set_ylim(22,10)
plt.plot(gga-rpga, gga, 'k.', alpha=0.03,markersize=0.9)
#plt.plot(gga[gasd&gaclpec][badgagc]-rpga[gasd&gaclpec][badgagc], gga[gasd&gaclpec][badgagc], 'bx', alpha=1,markersize=10)
#plt.plot(bpga[gasd][gacl]-rpga[gasd][gacl], gga[gasd][gacl], 'g.', alpha=1,markersize=4,label='GC candidates')
plt.plot(gga[gasd][gasdd]-rpga[gasd][gasdd],gga[gasd][gasdd], 'g.', alpha=1,markersize=8)
plt.plot(gga[gasd][gasdd][pp2]-rpga[gasd][gasdd][pp2],gga[gasd][gasdd][pp2], 'g.', alpha=1,markersize=14)
plt.plot(gga[gasd][gasdd][redir]-rpga[gasd][gasdd][redir],gga[gasd][gasdd][redir], 'r.', alpha=1,markersize=14)
plt.plot(gga[gasd][clsga]-rpga[gasd][clsga], gga[gasd][clsga], 'bx', alpha=1,markersize=10)
#plt.plot(bpga[gasd][gacl][cmdgc]-rpga[gasd][gacl][cmdgc], gga[gasd][gacl][cmdgc], 'r.', alpha=1,markersize=2,label='contaminants')
#plt.plot(bpga[gasd&gaclpec][outergc]-rpga[gasd&gaclpec][outergc], gga[gasd&gaclpec][outergc], 'rx', alpha=1,markersize=4 ,label='outer GCs ')
ax2.set_xlabel('$G-RP$ [mag]',fontsize=20)
ax2.set_ylabel('$G$ [mag]',fontsize=20)
ax2.legend(loc='upper left', frameon=False)
#plt.savefig('Gaia Dr2 GC fin 2.jpg',bbox_inches='tight',transparent=False) 
#plt.show()
#print(rpga[gasdd])
plt.savefig('Gaia EDR3 of IRAC GCs.jpg',bbox_inches='tight',transparent=False,dpi=400)
iknga = np.where(gra[gasd][clsga]>151.5)
print('ikn in Gaia EDR3',len(gga[gasd][clsga][iknga]))
#ax2=plt.subplot(423)
#ax2.plot(gra,gdec, 'k.', alpha=0.1,markersize=1)
#ax2.plot(ra[gasuba[gasd&gaclpec]][badgagc], dec[gasuba[gasd&gaclpec]][badgagc], 'bx', alpha=1,markersize=4)
#ax2.plot(gra[gasdd], gdec[gasdd], 'gx', alpha=1,markersize=4,label='GCs Subaru')# sugagc
#plt.plot(ra[gasuba[gasd]][gacl], dec[gasuba[gasd]][gacl], 'g.', alpha=1,markersize=4,label='GC candidates')
#ax2.plot(ra[uvmtchi[clsuv&posscand[uvmtchi]&bigblu[uvmtchi]]],dec[uvmtchi[clsuv&posscand[uvmtchi]&bigblu[uvmtchi]]], 'bx', alpha=1,markersize=3,label='GALEX')
#Without parallax and proper motion: this would exclude two GALEX Candidates
#plt.plot(cra,cdec, 'g.', alpha=1,markersize=5,label='GC candidates (without contaminant)')#
#plt.plot(ragclcand, decglcand, 'g.', alpha=1,markersize=4)
#plt.plot(ra[gasuba[gasd]][gacl][cmdgc], dec[gasuba[gasd]][gacl][cmdgc], 'r.', alpha=1,markersize=2,label='contaminants')
#ax2.set_xlim(max(ra)+0.3,min(ra)-0.3)
#ax2.set_ylim(min(dec)-0.2,max(dec)+0.2)
#ax2.set_xlim(max(ra),min(ra))
#ax2.set_ylim(min(dec),max(dec))
#ax2.legend(loc='lower left', frameon=False)


ax2=plt.subplot(423)
ax2.plot(gga,paga, 'k.', alpha=0.04,markersize=2,lw=0, markeredgecolor='none')
ax2.errorbar(gga[gasd][gasdd],paga[gasd][gasdd] ,
            yerr=pagaer[gasd][gasdd],
            fmt='g.')

ax2.errorbar(gga[gasd][gasdd][pp],paga[gasd][gasdd][pp] ,
            yerr=pagaer[gasd][gasdd][pp],
            fmt='r.')
ax2.errorbar(gga[gasd][gasdd][pp2],paga[gasd][gasdd][pp2] ,
            yerr=pagaer[gasd][gasdd][pp2],
            fmt='y.')
print('G',gga[gasd][gasdd])
ax2.errorbar(gga[gasd][clsga],paga[gasd][clsga] ,
            yerr=pagaer[gasd][clsga],
            fmt='b.')
ax2.set_xlabel('$(G)_{GAIA}$',fontsize=20)
ax2.set_ylabel('Parallax',fontsize=20)
ax2.set_ylim(-5,5)
ax2.set_xlim(15,22)
#ax2.set_ylim(-0.5,3)
#ax2.set_xlim(-1.5,2)
#cx[0],ccx[-1],ccy[-1],ccy[0]
ax2.legend(loc='lower left', frameon=False)

ax2=plt.subplot(424)
ax2.plot(gga,pmga, 'k.', alpha=0.04,markersize=2,lw=0, markeredgecolor='none')
ax2.errorbar(gga[gasd][gasdd],pmga[gasd][gasdd] ,
            yerr=pmerr[gasd][gasdd],
            fmt='g.')
print('IRAC proper motion',pmga[gasd][gasdd])
ax2.errorbar(gga[gasd][clsga],pmga[gasd][clsga] ,
            yerr=pmerr[gasd][clsga],
            fmt='b.')
#print(pmdecgaer[clgagc])
ax2.set_xlabel('$(G)_{GAIA}$',fontsize=20)
ax2.set_ylabel('Proper Motion',fontsize=20)
ax2.set_xlim(15,22)
ax2.set_ylim(-3,10)
#ax2.set_xlim(-1.5,2)
#cx[0],ccx[-1],ccy[-1],ccy[0]
ax2.legend(loc='lower left', frameon=False)
plt.show()


#Check the four overlapped GCs
iracgcand = SkyCoord(ra=raclcand,
                    dec=decclcand,
                    unit=(u.deg, u.deg), frame='icrs')  
#print(iracgcand)
irmtchii, irmtchdisti, _ = match_coordinates_sky(iracsgc,iracoverga)
clsa = irmtchdisti.arcsec<0.3

redir = np.where(bpga[gasd][gasdd]-gga[gasd][gasdd]>0)

plt.figure(figsize=(16,6),frameon=False)
ax2=plt.subplot(131)
ax2.plot(ra[irmtchi[cls]], dec[irmtchi[cls]], 'k.', alpha=0.1,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(gra[gasd][gasdd], gdec[gasd][gasdd],'g.', alpha=1,markersize=8)
ax2.plot(gra[gasd][gasdd][pp2], gdec[gasd][gasdd][pp2],'g.', alpha=1,markersize=14)
ax2.plot(gra[gasd][gasdd][redir], gdec[gasd][gasdd][redir],'r.', alpha=1,markersize=8)
#print(gra[gasdd][pp2],gdec[gasdd][pp2],gra[gasdd][pp],gdec[gasdd][pp])
#ax2.plot(gra[irmtchi[cls]][bluu], dec[irmtchi[cls]][bluu],'rx', alpha=1,markersize=7)
ax2.plot(gra[gasd][clsga], gdec[gasd][clsga],'bx', alpha=1,markersize=5)
#ax2.plot(iracoverga.ra.deg, iracoverga.dec.deg, 'rx', markersize=6)
#ax2.plot(iracoverga.ra.deg[3], iracoverga.dec.deg[3], 'rx', markersize=10)
ax2.plot(raclcand, decclcand,'g.', alpha=1,markersize=4)
ax2.set_xlabel('$RA$',fontsize=14)
ax2.set_ylabel('$Dec$',fontsize=14)
ax2.set_xlim(152.5,147+0.3)
ax2.set_ylim(mdec[0]+0.3,mdec[1]-0.5)

print('overlapped',iracoverga.ra.deg, iracoverga.dec.deg)
print('red irac',gra[gasd][gasdd][redir], gdec[gasd][gasdd][redir])

#Gaia Idnetified Strong GCs
gaiastrong = SkyCoord(ra=gra[gasd][clsga],
                      dec= gdec[gasd][clsga],
                      unit=(u.deg, u.deg), frame='icrs')

gairbass, gairbastss, _ = match_coordinates_sky(gaiastrong ,scoords[irmtchi[cls]])
gaiss = gairbastss.arcsec<0.5

#Gaia idntified IRAC GCs

gaiasir = SkyCoord(ra=gra[gasd][gasdd],
                      dec= gdec[gasd][gasdd],
                      unit=(u.deg, u.deg), frame='icrs')

gairbair, gairbastir, _ = match_coordinates_sky(gaiasir,scoords[irmtchi[cls]])
gaiir = gairbastir.arcsec<0.5

ax2=plt.subplot(132)
ax2.plot(inew[irmtchi[cls]], shp[irmtchi[cls]], 'k.', alpha=0.07,markersize=2,lw=0, markeredgecolor='none')
ax2.plot(inew[irmtchi[cls]][gairbass[gaiss]],shp[irmtchi[cls]][gairbass[gaiss]], 'bx', alpha=1,markersize=9,label='Strong GC candidates')
ax2.plot(iclcand, shpclcand,'g.', alpha=1,markersize=4,label='GC Candidates')
ax2.plot(inew[irmtchi[cls]][gairbair[gaiir]],shp[irmtchi[cls]][gairbair[gaiir]], 'g.', alpha=1,markersize=9)
#ax2.plot(iclcand[clsa], shpclcand[clsa],'r.', alpha=1,markersize=7,label='overlapped GC Candidates')
ax2.set_xlabel('$i_{0}$',fontsize=14)
ax2.set_ylabel('Size$_{average}$',fontsize=14)
ax2.set_xlim(17,27)#
ax2.set_ylim(0,2)
ax2.legend(loc='lower left', frameon=False)
plt.legend()


ax2=plt.subplot(133)
#Subaru Data black
#ax2.plot(gnew-inew, inew, 'k.', alpha=0.05,markersize=2,lw=0, markeredgecolor='none')
#Irac near Subaru <0.75'' red
#ax2.plot(gnew[irmtchi[cls]]-inew[irmtchi[cls]], inew[irmtchi[cls]], 'r.', alpha=0.15,markersize=2,lw=0, markeredgecolor='none')
#Irac and Subaru GCs candidate and maybe Irac Candidates dark green
#ax2.plot(gnew[irmtchi[cls]][posscand]-inew[irmtchi[cls]][posscand], inew[irmtchi[cls]][posscand],'g.', alpha=0.2,markersize=2)
#Blue dots, match within 2 arcsecond with Nantais 2010 in New Subaru
#ax2.plot(gnew[irmtchi[clss]]-inew[irmtchi[clss]], inew[irmtchi[clss]], 'bx', alpha=1,markersize=4)
#ax2.plot(gnew[irmtchi[clss]][starblu]-inew[irmtchi[clss]][starblu], inew[irmtchi[clss]][starblu], 'yv', alpha=1,markersize=5)
#ax2.plot(gnew[irmtchi[clss]][clsblu]-inew[irmtchi[clss]][clsblu], inew[irmtchi[clss]][clsblu], 'bx', alpha=1,markersize=5)
##ax2.plot(gclcand-iclcand, iclcand,'g.', alpha=1,markersize=3)#
#ax2.plot(gclcand[clsa]-iclcand[clsa], iclcand[clsa],'r.', alpha=1,markersize=7)
ax2.set_xlabel('$(g-i)_{0}$',fontsize=14)
ax2.set_ylabel('$i_{0}$',fontsize=14)
ax2.set_xlim(-1,3.5)
ax2.set_ylim(27,17)

#print('irac candidates with motion',)

x = np.linspace(10,22,1000)
y = 1.26 + 2.79*10**(-8)*np.exp(0.853*x)
plt.figure(figsize=(16,8),frameon=False)
ax2=plt.subplot(121)
ax2.set_ylim(0,7)
ax2.set_xlim(18,22)
#plt.plot(x, y, 'b.', alpha=1,markersize=1)
plt.plot(gga, brega, 'k.', alpha=0.1,markersize=1)
#plt.plot(bpga[gasd&gaclpec]-gga[gasd&gaclpec], gga[gasd&gaclpec]-rpga[gasd&gaclpec], 'bx', alpha=1,markersize=6 ,label='Confirmed GCs')
#plt.plot(bpga[clcc]-gga[clcc], gga[clcc]-rpga[clcc], 'rx', alpha=1,markersize=3 ,label='GCs subaru')
#plt.plot(bpga[gasd][gacl]-gga[gasd][gacl], gga[gasd][gacl]-rpga[gasd][gacl], 'g.', alpha=1,markersize=2,label='GC candidates')
#plt.plot(bplcand-glcand,glcand-rplcand, 'g.', alpha=1,markersize=4,label='GC candidates')
#plt.plot(bpga[gasd&gaclpec][badgagc]-gga[gasd&gaclpec][badgagc], gga[gasd&gaclpec][badgagc]-rpga[gasd&gaclpec][badgagc], 'bx', alpha=1,markersize=10 ,label='Strong GC candidates')
plt.plot(gga[gasd][gasdd],brega[gasd][gasdd], 'g.', alpha=1,markersize=20,label='Identified IRAC GC candidates in Gaia EDR3')
#plt.plot(gga[gasd][gasdd][pp2],brega[gasd][gasdd][pp2], 'g.', alpha=1,markersize=14)
#plt.plot(gga[gasd][gasdd][redir],brega[gasd][gasdd][redir], 'r.', alpha=1,markersize=14)
plt.plot(gga[gasd][clsga], brega[gasd][clsga], 'bx', alpha=1,markersize=14 ,label='Strong GC candidates')#
#plt.plot(bpga[gasd][gacl][cmdgc]-gga[gasd][gacl][cmdgc], gga[gasd][gacl][cmdgc]-rpga[gasd][gacl][cmdgc], 'r.', alpha=1,markersize=2,label='contaminants')
#plt.plot(bpga[gaclpec][ghogaia]-gga[gaclpec][ghogaia], gga[gaclpec][ghogaia]-rpga[gaclpec][ghogaia], 'rv', alpha=1,markersize=4 ,label='GHOST GCs ')
#ax2.add_patch(PathPatch(pgcga,facecolor='none',edgecolor='orange',lw=1.5))
#plt.plot(bpga-gga, b, 'k.', markersize=0.1,label='color edge')
#ax2.add_patch(PathPatch(pgcga ,facecolor='none',edgecolor='red',lw=1.5))
ax2.set_xlabel('$G$ [mag]',fontsize=25)
ax2.set_ylabel('BP/RP Excess Factor',fontsize=25)
ax2.legend(loc='lower left', frameon=False)

#aenga
x = np.linspace(10,22,1000)
#y = 0.297 + 5.63*10**(-8)*np.exp(0.895*x)
y =  5.63*10**(-8)*np.exp(0.865*x)
ax2=plt.subplot(122)
ax2.set_ylim(-1,60)
ax2.set_xlim(18,22)
#plt.plot(x, y, 'b.', alpha=1,markersize=1)
plt.plot(gga, aenga, 'k.', alpha=0.1,markersize=1)
#plt.plot(bpga[gasd&gaclpec]-gga[gasd&gaclpec], gga[gasd&gaclpec]-rpga[gasd&gaclpec], 'bx', alpha=1,markersize=6 ,label='Confirmed GCs')
#plt.plot(bpga[clcc]-gga[clcc], gga[clcc]-rpga[clcc], 'rx', alpha=1,markersize=3 ,label='GCs subaru')
#plt.plot(bpga[gasd][gacl]-gga[gasd][gacl], gga[gasd][gacl]-rpga[gasd][gacl], 'g.', alpha=1,markersize=2,label='GC candidates')
#plt.plot(bplcand-glcand,glcand-rplcand, 'g.', alpha=1,markersize=4,label='GC candidates')
#plt.plot(bpga[gasd&gaclpec][badgagc]-gga[gasd&gaclpec][badgagc], gga[gasd&gaclpec][badgagc]-rpga[gasd&gaclpec][badgagc], 'bx', alpha=1,markersize=10 ,label='Strong GC candidates')
plt.plot(gga[gasd][gasdd],aenga[gasd][gasdd], 'g.', alpha=1,markersize=20)
#plt.plot(gga[gasd][gasdd][pp2],aenga[gasd][gasdd][pp2], 'g.', alpha=1,markersize=14)
#plt.plot(gga[gasd][gasdd][redir],aenga[gasd][gasdd][redir], 'r.', alpha=1,markersize=14)
plt.plot(gga[gasd][clsga], aenga[gasd][clsga], 'bx', alpha=1,markersize=14 )#
#plt.plot(bpga[gasd][gacl][cmdgc]-gga[gasd][gacl][cmdgc], gga[gasd][gacl][cmdgc]-rpga[gasd][gacl][cmdgc], 'r.', alpha=1,markersize=2,label='contaminants')
#plt.plot(bpga[gaclpec][ghogaia]-gga[gaclpec][ghogaia], gga[gaclpec][ghogaia]-rpga[gaclpec][ghogaia], 'rv', alpha=1,markersize=4 ,label='GHOST GCs ')
#ax2.add_patch(PathPatch(pgcga,facecolor='none',edgecolor='orange',lw=1.5))
#plt.plot(bpga-gga, b, 'k.', markersize=0.1,label='color edge')
#ax2.add_patch(PathPatch(pgcga ,facecolor='none',edgecolor='red',lw=1.5))
ax2.set_xlabel('$G$ [mag]',fontsize=25)
ax2.set_ylabel('Astromeric excess Noise [mas]',fontsize=25)
ax2.legend(loc='upper left', frameon=False)
plt.tight_layout()
plt.savefig('Gaia EDR3 of IRAC.jpg',bbox_inches='tight',transparent=False, dpi=200) #, transparent=False
plt.show()

L = ra[gasuba[gasd]][gacl][sugagc]
R = dec[gasuba[gasd]][gacl][sugagc]
print(L)
print(R)
for lval,rval in zip(L,R):
     print(lval,rval)
print(len(ra[gasuba[gasd]][gacl][sugagc]))
for lval,rval in zip(L,R):
     print(lval)
for lval,rval in zip(L,R):
     print(rval)

"""M81 Candidates peaks about -7.57 V0 assuming 27.67 distance modulus.

Nantais found it to be -7.41 V0

[Fe/H] M81 outer halo GC -1.3203142857142858 without outlier -1.0870333333333333


M82 outer halo GC -1.2996666666666667


ngc outer halo GC -1.528


Nantais M81 GC -1.06 ± 0.07 excluding some potential stars -1.09 ± 0.07

g-V = 0.63 (B-V)






Chandar 2004 GC candidates B-V about 1


peak at -8 Mv


g = -7.37


i ~ -8.15

M31 is -7.9 Mv => g -7.27

MW is -7.3 Mv => g -6.67 i ~7.42 

KS test shows that i band has p value 0.74 and g band has p value 0.90. This means that these two distribtuions can be well represented by normal distribtuion
"""